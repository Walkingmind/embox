# Generated by Xpand using M2Make template.

# Model of 'myFile' package.

ifndef __mybuild_myfile_model_mk
__mybuild_myfile_model_mk := $(lastword $(MAKEFILE_LIST))

#
# Model object 'Package'.
#
# The following features are defined:
#   - reference 'entities'
#   - attribute 'imports'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# To instantiate this class use 'MyFileFactory.createPackage'.
define class-MyPackage
	$(super ENamedObject)

	# 'entities' bidirectional containment reference.
	# The opposite reference is 'Entity.package'.
	$(property entities... : MyEntity)

	# 'imports' attribute.
	$(property imports...)

endef

#
# Model object 'Entity'.
#
# The following features are defined:
#   - reference 'package'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# This is an abstract class. You can't instantiate it directly.
define class-MyEntity
	$(super ENamedObject)

	# 'package' bidirectional container reference.
	# The opposite reference is 'Package.entities'.
	$(property package : MyPackage)

endef

#
# Model object 'Interface'.
#
# The following features are defined:
#   - reference 'features'
#
# The following features and operations are inherited from 'Extendable':
#   - reference 'subTypes'
#   - reference 'superType'
#   - reference 'allSubTypes'
#   - reference 'allSuperTypes'
#   - operation 'isSubTypeOf'
#   - operation 'isSuperTypeOf'
#
# The following features are inherited from 'Entity':
#   - reference 'package'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# To instantiate this class use 'MyFileFactory.createInterface'.
define class-MyInterface
	$(super MyEntity)
	$(super MyExtendable)

	# 'features' bidirectional containment reference.
	# The opposite reference is 'Feature.interface'.
	$(property features... : MyFeature)

endef

#
# Model object 'Feature'.
#
# The following features are defined:
#   - reference 'interface'
#   - reference 'providedBy'
#   - reference 'requiredBy'
#
# The following features and operations are inherited from 'Extendable':
#   - reference 'subTypes'
#   - reference 'superType'
#   - reference 'allSubTypes'
#   - reference 'allSuperTypes'
#   - operation 'isSubTypeOf'
#   - operation 'isSuperTypeOf'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# To instantiate this class use 'MyFileFactory.createFeature'.
define class-MyFeature
	$(super ENamedObject)
	$(super MyExtendable)

	# 'interface' bidirectional container reference.
	# The opposite reference is 'Interface.features'.
	$(property interface : MyInterface)

	# 'providedBy' bidirectional reference.
	# The opposite reference is 'Module.provides'.
	$(property providedBy... : MyModule)
	$(property providedBy_links... : ELink)

	# 'requiredBy' bidirectional reference.
	# The opposite reference is 'Module.requires'.
	$(property requiredBy... : MyModule)
	$(property requiredBy_links... : ELink)

endef

#
# Model object 'Module'.
#
# The following features are defined:
#   - attribute 'static'
#   - attribute 'abstract'
#   - reference 'depends'
#   - reference 'dependent'
#   - reference 'provides'
#   - reference 'requires'
#
# The following features and operations are inherited from 'Extendable':
#   - reference 'subTypes'
#   - reference 'superType'
#   - reference 'allSubTypes'
#   - reference 'allSuperTypes'
#   - operation 'isSubTypeOf'
#   - operation 'isSuperTypeOf'
#
# The following features are inherited from 'Entity':
#   - reference 'package'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# To instantiate this class use 'MyFileFactory.createModule'.
define class-MyModule
	$(super MyEntity)
	$(super MyExtendable)

	# 'static' attribute.
	$(property isStatic)

	# 'abstract' attribute.
	$(property isAbstract)

	# 'depends' bidirectional reference.
	# The opposite reference is 'dependent'.
	$(property depends... : MyModule)
	$(property depends_links... : ELink)

	# 'dependent' bidirectional reference.
	# The opposite reference is 'depends'.
	$(property dependent... : MyModule)
	$(property dependent_links... : ELink)

	# 'provides' bidirectional reference.
	# The opposite reference is 'Feature.providedBy'.
	$(property provides... : MyFeature)
	$(property provides_links... : ELink)

	# 'requires' bidirectional reference.
	# The opposite reference is 'Feature.requiredBy'.
	$(property requires... : MyFeature)
	$(property requires_links... : ELink)

endef

#
# Model object 'Extendable'.
#
# The following features and operations are defined:
#   - reference 'subTypes'
#   - reference 'superType'
#   - reference 'allSubTypes'
#   - reference 'allSuperTypes'
#   - operation 'isSubTypeOf'
#   - operation 'isSuperTypeOf'
#
# The following features and operations are inherited from 'ENamedObject':
#   - attribute 'name'
#   - attribute 'qualifiedName'
#   - operation 'eInverseResolvedLinks'
#
# This is an abstract class. You can't instantiate it directly.
define class-MyExtendable
	$(super ENamedObject)

	# 'subTypes' bidirectional reference.
	# The opposite reference is 'superType'.
	$(property subTypes... : MyExtendable)
	$(property subTypes_links... : ELink)

	# 'superType' bidirectional reference.
	# The opposite reference is 'subTypes'.
	$(property superType : MyExtendable)
	$(property superType_link : ELink)

	# 'allSubTypes' bidirectional reference.
	# The opposite reference is 'allSuperTypes'.
	$(property allSubTypes... : MyExtendable)# read-only.

	# 'allSuperTypes' bidirectional reference.
	# The opposite reference is 'allSubTypes'.
	$(property allSuperTypes... : MyExtendable)# read-only.

	# 'isSubTypeOf' operation.
	#   1. another : MyExtendable
	$(method isSubTypeOf)

	# 'isSuperTypeOf' operation.
	#   1. another : MyExtendable
	$(method isSuperTypeOf)

endef

#
# Model object 'Filename'.
#
# No features or operations defined.
#
# To instantiate this class use 'MyFileFactory.createFilename'.
define class-MyFilename
	$(super EObject)

endef

$(def_all)

include $(dir $(__mybuild_myfile_model_mk))myfile-model_impl.mk

endif # __mybuild_myfile_model_mk

