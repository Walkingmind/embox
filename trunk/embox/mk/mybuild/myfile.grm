"Name"     = 'MyFile'
"Author"   = 'Eldar Abusalimov'
"Version"  = '0.1'
"About"    = 'MyBuild file'

"Case Sensitive" = True

"Start Symbol" = <Model>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

!{Whitespace}   = {&09 .. &0D} + {Space}

!{Printable}    = {&20 .. &7F}

{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]

{String Chars} = {Printable} + {HT} - ["\]
{String Esc}   = [rnt''"\]
{Non Quote}    = {Printable} + {Whitespace} - [''\]
{Quote Esc}    = [''\]

{Non Slash}    = {Printable} + {Whitespace} - [/]
{Non Asterisk} = {Printable} + {Whitespace} - [*]

{Not New Line} = {Printable} + {Whitespace} - {CR} - {LF}

! -------------------------------------------------
! Terminals
! -------------------------------------------------

Whitespace    = {Whitespace}+
              | '/*' ( {Non Asterisk} | '*' {Non Slash} )*  '*/'
              | '//' {Not New Line}* ( {CR}? {LF} )?

Identifier    = {ID Head}{ID Tail}*
StringLiteral = '"' ( {String Chars} | '\' {String Esc} )* '"'
              | '''''' ( ( '' ( '' )? )? ( {Non Quote} | '\' {Quote Esc} ) )* ''''''

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The grammar starts below
<Model>
        ::= <PackageDecl> <ImportDecls> <ModuleDecls>

<PackageDecl>
        ::= 'package' <QualifiedName> ';'
          |

<ImportDecls>
        ::= <ImportDecl> <ImportDecls>
          |
<ImportDecl>
        ::= 'import' <QualifiedNameWithWildcard> ';'

<ModuleDecls>
        ::= <ModuleDecl> <ModuleDecls>
          |
<ModuleDecl>
        ::= <ModuleModifiers> 'module' Identifier <SuperModules> '{' <ModuleBodyDecls> '}'

<ModuleModifiers>
        ::= <ModuleModifier> <ModuleModifiers>
          |
<ModuleModifier>
        ::= 'static'
          | 'abstract'

<SuperModules>
        ::= 'extends' <ModuleRefList>
          |

<ModuleBodyDecls>
        ::= <ModuleBodyDecl> <ModuleBodyDecls>
          |
<ModuleBodyDecl>
        ::= <SourcesDecl>
          | <ObjectsDecl>
          | <CcflagsDecl>
          | <DependenciesDecl>

<CcflagsDecl>
        ::= 'ccfags' StringLiteral ';'

<DependenciesDecl>
        ::= 'depends' <ModuleRefList> ';'

<SourcesDecl>
        ::= 'source' <FileOrTargetList> ';'

<ObjectsDecl>
        ::= 'object' <FileOrTargetList> ';'

<FileOrTarget>
        ::= <Filename>
          | <Filename> ':' <FilenameList> '{' StringLiteral '}'

<FileOrTargetList>
        ::= <FileOrTarget> ',' <FileOrTargetList>
          | <FileOrTarget>

<Filename>
        ::= StringLiteral
<FilenameList>
        ::= <Filename> ',' <FilenameList>
          | <Filename>

<ModuleRef>
        ::= <QualifiedName>
<ModuleRefList>
        ::= <ModuleRef> ',' <ModuleRefList>
          | <ModuleRef>

! Extended identifiers.

<QualifiedName>
        ::= Identifier '.' <QualifiedName>
          | Identifier

<QualifiedNameWithWildcard>
        ::= <QualifiedName> '.*'
          | <QualifiedName>


