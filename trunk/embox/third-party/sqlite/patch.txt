diff -aur sqlite-autoconf-3071600/Makefile.in sqlite/Makefile.in
--- sqlite-autoconf-3071600/Makefile.in	2013-03-18 20:01:56.000000000 +0400
+++ sqlite/Makefile.in	2013-04-01 17:52:43.975550031 +0400
@@ -39,7 +39,7 @@
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-bin_PROGRAMS = sqlite3$(EXEEXT)
+bin_PROGRAMS = #sqlite3$(EXEEXT)
 DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
 	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/sqlite3.pc.in $(top_srcdir)/configure INSTALL \
Seulement dans sqlite/: Makefile.in~
diff -aur sqlite-autoconf-3071600/sqlite3.c sqlite/sqlite3.c
--- sqlite-autoconf-3071600/sqlite3.c	2013-03-18 20:01:49.000000000 +0400
+++ sqlite/sqlite3.c	2013-04-01 17:47:15.083541981 +0400
@@ -18040,6 +18040,7 @@
 ** mutex types, the same mutex is returned on every call that has
 ** the same type number.
 */
+#define PTHREAD_MUTEX_INITIALIZER {{{NULL,NULL,NULL},{{NULL,NULL,NULL},0,NULL,0}},NULL,0}
 static sqlite3_mutex *pthreadMutexAlloc(int iType){
   static sqlite3_mutex staticMutexes[] = {
     SQLITE3_MUTEX_INITIALIZER,
@@ -18049,6 +18050,12 @@
     SQLITE3_MUTEX_INITIALIZER,
     SQLITE3_MUTEX_INITIALIZER
   };
+  static Bool staticMutexesInitialized = 0;
+  if (!staticMutexesInitialized) {
+    for(int i=0; i<sizeof(staticMutexes)/sizeof(sqlite3_mutex); i++) {
+      pthread_mutex_init(&staticMutexes[i].mutex, NULL);
+    }
+  }
   sqlite3_mutex *p;
   switch( iType ){
     case SQLITE_MUTEX_RECURSIVE: {
