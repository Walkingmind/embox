diff -ur qt-everywhere-opensource-src-4.8.5/src/corelib/global/qglobal.h source/src/corelib/global/qglobal.h
--- qt-everywhere-opensource-src-4.8.5/src/corelib/global/qglobal.h	2013-06-07 09:16:52.000000000 +0400
+++ source/src/corelib/global/qglobal.h	2013-08-13 19:52:38.564913213 +0400
@@ -261,6 +261,8 @@
 #  define Q_OS_INTEGRITY
 #elif defined(VXWORKS) /* there is no "real" VxWorks define - this has to be set in the mkspec! */
 #  define Q_OS_VXWORKS
+#elif defined(__EMBOX__)
+#  define Q_OS_EMBOX
 #elif defined(__MAKEDEPEND__)
 #else
 #  error "Qt has not been ported to this OS - talk to qt-bugs@trolltech.com"
diff -ur qt-everywhere-opensource-src-4.8.5/src/corelib/io/qresource.cpp source/src/corelib/io/qresource.cpp
--- qt-everywhere-opensource-src-4.8.5/src/corelib/io/qresource.cpp	2013-06-07 09:16:52.000000000 +0400
+++ source/src/corelib/io/qresource.cpp	2013-08-13 19:52:38.564913213 +0400
@@ -929,8 +929,10 @@
 };
 
 #if defined(Q_OS_UNIX) && !defined(Q_OS_SYMBIAN) && !defined (Q_OS_NACL) && !defined(Q_OS_INTEGRITY)
+#if !defined(Q_OS_EMBOX)
 #define QT_USE_MMAP
 #endif
+#endif
 
 // most of the headers below are already included in qplatformdefs.h
 // also this lacks Large File support but that's probably irrelevant
diff -ur qt-everywhere-opensource-src-4.8.5/src/corelib/kernel/qtranslator.cpp source/src/corelib/kernel/qtranslator.cpp
--- qt-everywhere-opensource-src-4.8.5/src/corelib/kernel/qtranslator.cpp	2013-06-07 09:16:52.000000000 +0400
+++ source/src/corelib/kernel/qtranslator.cpp	2013-08-13 19:52:38.564913213 +0400
@@ -61,9 +61,11 @@
 #include "qresource.h"
 
 #if defined(Q_OS_UNIX) && !defined(Q_OS_SYMBIAN) && !defined(Q_OS_INTEGRITY)
+#if !defined(Q_OS_EMBOX)
 #define QT_USE_MMAP
 #include "private/qcore_unix_p.h"
 #endif
+#endif
 
 #ifdef Q_OS_SYMBIAN
 #include "private/qcore_symbian_p.h"
diff -ur qt-everywhere-opensource-src-4.8.5/src/corelib/tools/qiterator.h source/src/corelib/tools/qiterator.h
--- qt-everywhere-opensource-src-4.8.5/src/corelib/tools/qiterator.h	2013-06-07 09:16:52.000000000 +0400
+++ source/src/corelib/tools/qiterator.h	2013-08-13 19:54:45.958249750 +0400
@@ -47,7 +47,7 @@
 QT_BEGIN_HEADER
 
 #ifdef QT_NO_STL
-# include <ciso646> // No-op, indirectly include additional configuration headers.
+//# include <ciso646> // No-op, indirectly include additional configuration headers.
 # if defined(_LIBCPP_VERSION)
 // libc++ may declare these structs in an inline namespace. Forward-declare
 // these iterators in the same namespace so that we do not shadow the original
diff -ur qt-everywhere-opensource-src-4.8.5/src/gui/image/qmnghandler.cpp source/src/gui/image/qmnghandler.cpp
--- qt-everywhere-opensource-src-4.8.5/src/gui/image/qmnghandler.cpp	2013-06-07 09:16:59.000000000 +0400
+++ source/src/gui/image/qmnghandler.cpp	2013-08-13 19:52:38.401579874 +0400
@@ -98,7 +98,7 @@
         (iChunkname>>8)&0xff,
         (iChunkname>>0)&0xff,
         iExtra1,iExtra2);
-    return TRUE;
+    return MNG_TRUE;
 }
 
 static mng_ptr myalloc(mng_size_t iSize)
diff -ur qt-everywhere-opensource-src-4.8.5/src/gui/styles/qplastiquestyle.cpp source/src/gui/styles/qplastiquestyle.cpp
--- qt-everywhere-opensource-src-4.8.5/src/gui/styles/qplastiquestyle.cpp	2013-06-07 09:16:59.000000000 +0400
+++ source/src/gui/styles/qplastiquestyle.cpp	2013-08-13 19:52:38.568246545 +0400
@@ -1513,17 +1513,21 @@
             handle.setColor(3, option->palette.light().color().rgba());
 
             if (option->state & State_Horizontal) {
-                int nchunks = cacheRect.height() / handle.height();
-                int indent = (cacheRect.height() - (nchunks * handle.height())) / 2;
-                for (int i = 0; i < nchunks; ++i)
-                    cachePainter.drawImage(QPoint(cacheRect.left() + 3, cacheRect.top() + indent + i * handle.height()),
-                                           handle);
+                if (0 < handle.height()) {
+            	    int nchunks = cacheRect.height() / handle.height();
+                    int indent = (cacheRect.height() - (nchunks * handle.height())) / 2;
+                    for (int i = 0; i < nchunks; ++i)
+                        cachePainter.drawImage(QPoint(cacheRect.left() + 3, cacheRect.top() + indent + i * handle.height()),
+                                               handle);
+                }
             } else {
-                int nchunks = cacheRect.width() / handle.width();
-                int indent = (cacheRect.width() - (nchunks * handle.width())) / 2;
-                for (int i = 0; i < nchunks; ++i)
-                    cachePainter.drawImage(QPoint(cacheRect.left() + indent + i * handle.width(), cacheRect.top() + 3),
-                                           handle);
+                if (0 < handle.width()) {
+            	    int nchunks = cacheRect.width() / handle.width();
+                    int indent = (cacheRect.width() - (nchunks * handle.width())) / 2;
+                    for (int i = 0; i < nchunks; ++i)
+                        cachePainter.drawImage(QPoint(cacheRect.left() + indent + i * handle.width(), cacheRect.top() + 3),
+                                               handle);
+                }
             }
             cachePainter.end();
             QPixmapCache::insert(pixmapName, cache);
diff -ur qt-everywhere-opensource-src-4.8.5/src/plugins/imageformats/ico/qicohandler.cpp source/src/plugins/imageformats/ico/qicohandler.cpp
--- qt-everywhere-opensource-src-4.8.5/src/plugins/imageformats/ico/qicohandler.cpp	2013-06-07 09:17:00.000000000 +0400
+++ source/src/plugins/imageformats/ico/qicohandler.cpp	2013-08-13 19:52:38.564913213 +0400
@@ -364,11 +364,11 @@
     if (iod) {
         if (iod->seek(startpos + imageOffset)) {
             if (readBMPInfoHeader(iod, header)) {
-                return TRUE;
+                return true;
             }
         }
     }
-    return FALSE;
+    return false;
 }
 
 void ICOReader::findColorInfo(QImage & image)
diff -ur qt-everywhere-opensource-src-4.8.5/src/plugins/platforms/platforms.pro source/src/plugins/platforms/platforms.pro
--- qt-everywhere-opensource-src-4.8.5/src/plugins/platforms/platforms.pro	2013-06-07 09:17:00.000000000 +0400
+++ source/src/plugins/platforms/platforms.pro	2013-08-13 19:52:38.564913213 +0400
@@ -3,7 +3,9 @@
 SUBDIRS += minimal
 
 contains(QT_CONFIG, wayland) {
-    SUBDIRS += wayland
+	!contains(DEFINES, QT_OVERRIDE_NO_WAYLAND) {
+	    SUBDIRS += wayland
+	}
 }
 
 qnx {
diff -aur qt-everywhere-opensource-src-4.8.5/src/corelib/global/qglobal.cpp source/src/corelib/global/qglobal.cpp
--- qt-everywhere-opensource-src-4.8.5/src/corelib/global/qglobal.cpp	2013-06-07 09:16:52.000000000 +0400
+++ source/src/corelib/global/qglobal.cpp	2013-11-12 16:07:11.709867270 +0400
@@ -59,7 +59,7 @@
 #include <string.h>
 
 #ifndef QT_NO_EXCEPTIONS
-#  include <string>
+//#  include <string>
 #  include <exception>
 #endif
 
