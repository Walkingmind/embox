diff -Naur packetdrill.orig/gtests/net/packetdrill/config.c packetdrill/gtests/net/packetdrill/config.c
--- packetdrill.orig/gtests/net/packetdrill/config.c	2014-07-18 14:37:14.093012197 +0400
+++ packetdrill/gtests/net/packetdrill/config.c	2014-07-18 14:37:24.116345235 +0400
@@ -482,7 +482,7 @@
 		config->argv[i] = strdup(argv[i]);
 
 	/* Parse the arguments. */
-	optind = 0;
+	optind = 1;
 	while ((c = getopt_long(argc, argv, "v", options, NULL)) > 0)
 		process_option(c, optarg, config, "Command Line");
 	return argv + optind;
diff -Naur packetdrill.orig/gtests/net/packetdrill/ip_address.c packetdrill/gtests/net/packetdrill/ip_address.c
--- packetdrill.orig/gtests/net/packetdrill/ip_address.c	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/ip_address.c	2014-07-17 18:24:54.888489486 +0400
@@ -168,7 +168,7 @@
 {
 	struct sockaddr_in sa_v4;
 	memset(&sa_v4, 0, sizeof(sa_v4));
-#ifndef linux
+#if !defined(linux) && !defined(__EMBOX__)
 	sa_v4.sin_len = sizeof(sa_v4);
 #endif
 	sa_v4.sin_family = AF_INET;
@@ -186,7 +186,7 @@
 {
 	struct sockaddr_in6 sa_v6;
 	memset(&sa_v6, 0, sizeof(sa_v6));
-#ifndef linux
+#if !defined(linux) && !defined(__EMBOX__)
 	sa_v6.sin6_len = sizeof(sa_v6);
 #endif
 	sa_v6.sin6_family = AF_INET6;
diff -Naur packetdrill.orig/gtests/net/packetdrill/link_layer.c packetdrill/gtests/net/packetdrill/link_layer.c
--- packetdrill.orig/gtests/net/packetdrill/link_layer.c	2014-07-18 14:37:14.079678864 +0400
+++ packetdrill/gtests/net/packetdrill/link_layer.c	2014-07-17 18:24:54.888489486 +0400
@@ -74,6 +74,10 @@
 #include <ifaddrs.h>
 #endif /* defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) */
 
+#if defined(__EMBOX__)
+#include <ifaddrs.h>
+#endif 
+
 void get_hw_address(const char *name, struct ether_addr *hw_address)
 {
 	struct ifaddrs *ifaddrs_list, *ifaddr;
diff -Naur packetdrill.orig/gtests/net/packetdrill/Makefile.common packetdrill/gtests/net/packetdrill/Makefile.common
--- packetdrill.orig/gtests/net/packetdrill/Makefile.common	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/Makefile.common	2014-07-17 18:24:54.891822820 +0400
@@ -4,7 +4,7 @@
 
 parser.o: parser.y
 	bison --output=parser.c --defines=parser.h --report=state parser.y
-	$(CC) $(CFLAGS) -c parser.c
+	$(CC) $(CPPFLAGS) $(CFLAGS) -c parser.c
 
 lexer.o: lexer.l parser.o
 	flex -olexer.c lexer.l
@@ -19,6 +19,7 @@
          symbols_freebsd.o \
          symbols_openbsd.o \
          symbols_netbsd.o \
+         symbols_embox.o \
          gre_packet.o icmp_packet.o ip_packet.o tcp_packet.o udp_packet.o \
          mpls_packet.o \
          run.o run_command.o run_packet.o run_system_call.o \
diff -Naur packetdrill.orig/gtests/net/packetdrill/netdev.c packetdrill/gtests/net/packetdrill/netdev.c
--- packetdrill.orig/gtests/net/packetdrill/netdev.c	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/netdev.c	2014-07-17 18:24:54.891822820 +0400
@@ -360,6 +360,11 @@
 	linux_tun_write(netdev, packet);
 #endif  /* linux */
 
+#ifdef __EMBOX__
+	(void) netdev;
+	PD_STUB_USE();
+#endif
+
 	return STATUS_OK;
 }
 
diff -Naur packetdrill.orig/gtests/net/packetdrill/packet_socket_pcap.c packetdrill/gtests/net/packetdrill/packet_socket_pcap.c
--- packetdrill.orig/gtests/net/packetdrill/packet_socket_pcap.c	2014-07-18 14:37:14.079678864 +0400
+++ packetdrill/gtests/net/packetdrill/packet_socket_pcap.c	2014-07-17 18:24:54.891822820 +0400
@@ -37,10 +37,14 @@
 
 #if defined(__FreeBSD__)
 #include <pcap/pcap.h>
-#elif defined(__OpenBSD__) || defined(__NetBSD__)
+#elif defined(__OpenBSD__) || defined(__NetBSD__) || defined(__EMBOX__)
 #include <pcap.h>
 #endif
 
+#if defined(__EMBOX__)
+#include <kernel/time/time.h>
+#endif
+
 #include "ethernet.h"
 #include "logging.h"
 
@@ -256,6 +260,8 @@
 	packet->time_usecs = timeval_to_usecs(&pkt_header->ts);
 #elif defined(__OpenBSD__)
 	packet->time_usecs = bpf_timeval_to_usecs(&pkt_header->ts);
+#elif defined(__EMBOX__)
+	packet->time_usecs = timeval_to_ns(&pkt_header->ts) / NSEC_PER_USEC;
 #else
 	packet->time_usecs = implement_me("implement me for your platform");
 #endif  /* defined(__OpenBSD__) */
diff -Naur packetdrill.orig/gtests/net/packetdrill/platforms.h packetdrill/gtests/net/packetdrill/platforms.h
--- packetdrill.orig/gtests/net/packetdrill/platforms.h	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/platforms.h	2014-07-17 18:24:54.891822820 +0400
@@ -92,5 +92,22 @@
 
 #endif  /* __NetBSD__ */
 
+/* ------------------------- Embox ---------------------- */
+
+#if defined(__EMBOX__)
+
+#define USE_LIBPCAP             1
+#define TUN_PATH                "/dev/tun0"
+#define TUN_DEV                 "tun0"
+
+#define HAVE_TCP_INFO           0
+
+#include "open_memstream.h"
+#include "fmemopen.h"
+
+#define __always_inline inline __attribute__((__always_inline__))
+
+#endif  /* __EMBOX__ */
+
 
 #endif /* __PLATFORMS_H__ */
diff -Naur packetdrill.orig/gtests/net/packetdrill/run_system_call.c packetdrill/gtests/net/packetdrill/run_system_call.c
--- packetdrill.orig/gtests/net/packetdrill/run_system_call.c	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/run_system_call.c	2014-07-17 18:24:54.891822820 +0400
@@ -54,7 +54,7 @@
 #ifdef linux
 	return syscall(__NR_gettid);
 #endif
-#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
+#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__EMBOX__)
 	/* TODO(ncardwell): Implement me. XXX */
 	return 0;
 #endif /* defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)*/
@@ -1795,7 +1795,7 @@
 #elif defined(__FreeBSD__) || defined(__OpenBSD__)
 	pthread_yield();
 	return 0;
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__EMBOX__)
 	return sched_yield();
 #endif  /* defined(__NetBSD__) */
 }
diff -Naur packetdrill.orig/gtests/net/packetdrill/symbols_embox.c packetdrill/gtests/net/packetdrill/symbols_embox.c
--- packetdrill.orig/gtests/net/packetdrill/symbols_embox.c	1970-01-01 03:00:00.000000000 +0300
+++ packetdrill/gtests/net/packetdrill/symbols_embox.c	2014-07-17 18:24:54.891822820 +0400
@@ -0,0 +1,12 @@
+
+#ifdef __EMBOX__
+
+#include "symbols.h"
+
+struct int_symbol platform_symbols_table[] = {};
+
+struct int_symbol *platform_symbols(void) {
+	return platform_symbols_table;
+}
+
+#endif /* __EMBOX__ */
diff -Naur packetdrill.orig/gtests/net/packetdrill/tcp_option_g.c packetdrill/gtests/net/packetdrill/tcp_option_g.c
--- packetdrill.orig/gtests/net/packetdrill/tcp_option_g.c	1970-01-01 03:00:00.000000000 +0300
+++ packetdrill/gtests/net/packetdrill/tcp_option_g.c	2014-07-17 18:24:54.891822820 +0400
@@ -0,0 +1,4 @@
+
+#include "tcp_option.h"
+
+struct tcp_option tcp_option;
diff -Naur packetdrill.orig/gtests/net/packetdrill/tcp_options.h packetdrill/gtests/net/packetdrill/tcp_options.h
--- packetdrill.orig/gtests/net/packetdrill/tcp_options.h	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/tcp_options.h	2014-07-17 18:24:54.891822820 +0400
@@ -93,7 +93,8 @@
 			u8 cookie[MAX_TCP_FAST_OPEN_COOKIE_BYTES];
 		} fast_open;
 	} data;
-} __packed tcp_option;
+} __packed;
+extern struct tcp_option tcp_option;
 
 /* Allocate a new options list. */
 extern struct tcp_options *tcp_options_new(void);
diff -Naur packetdrill.orig/gtests/net/packetdrill/wire_conn.c packetdrill/gtests/net/packetdrill/wire_conn.c
--- packetdrill.orig/gtests/net/packetdrill/wire_conn.c	2014-07-18 14:37:14.083012198 +0400
+++ packetdrill/gtests/net/packetdrill/wire_conn.c	2014-07-17 18:24:54.895156153 +0400
@@ -125,7 +125,7 @@
 	}
 
 	memset(&sa_v4, 0, sizeof(sa_v4));
-#ifndef linux
+#if !defined(linux) && !defined(__EMBOX__)
 	sa_v4.sin_len = sizeof(sa_v4);
 #endif
 	sa_v4.sin_family = AF_INET;
