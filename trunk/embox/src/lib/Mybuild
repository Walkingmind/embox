package embox.lib

static module ElfLib {
	source "elf/elf_executer.c"
	source "elf/elf_reader.c"
}

static module LibCDiagnostic {
	source "assert.c"
	depends LibCStdio
}

static module LibCMisc {
	source "crypt/crc32.c"
	source "crypt/md5.c"
	source "ctype/ctype.c"
}

static module LibCStdlib {
	source "stdlib/bsearch.c"
	source "stdlib/qsort.c"
	source "stdlib/rand.c"
	source "stdlib/strtod.c"
	source "stdlib/strtol.c"
	source "stdlib/strtoul.c"
	source "stdlib/abort.c"
}

static module LibCString {
	source "string/memchr.c"
	source "string/memcmp.c"
	source "string/memmove.c"
	source "string/memset.c"
	source "string/strcat.c"
	source "string/strchr.c"
	source "string/strcmp.c"
	source "string/strcpy.c"
	source "string/strcspn.c"
	source "string/strerror.c"
	source "string/strlen.c"
	source "string/strlwr.c"
	source "string/strncat.c"
	source "string/strncmp.c"
	source "string/strncpy.c"
	source "string/strpbrk.c"
	source "string/strrchr.c"
	source "string/strspn.c"
	source "string/strstr.c"
	source "string/strupr.c"
}

static module LibCMath {
	source "math/floor.c"
	source "math/pow.c"
	source "math/div.c"
	source "math/ldiv.c"
	source "math/blog2.c"
	source "soft-fp/df3.c"
	source "soft-fp/sf3.c"
	source "soft-fp/softfloat.c"
	source "soft-fp/softfloat-macros.c"
	source "soft-fp/softfloat-spec.c"
	source "gcc/clzsi2.c"
	source "gcc/lshrdi3.c"
	source "gcc/divdi3.c"
	source "gcc/divsi3.c"
	source "gcc/moddi3.c"
	source "gcc/modsi3.c"
	source "gcc/udivdi3.c"
	source "gcc/udivsi3.c"
	source "gcc/umoddi3.c"
	source "gcc/umodsi3.c"
	source "gcc/muldi3.c"
}

static module LibCStdio {
	source "stdio/fgetc.c"
	source "stdio/fputc.c"
	source "stdio/gets.c"
	source "stdio/sprintf.c"
	source "stdio/printf.c"
	source "stdio/printf_impl.c"
	source "stdio/printk.c"
	source "stdio/puts.c"
	source "stdio/scanf.c"
	depends LibCFs
	depends LibCMath
}

static module LibC {
	source "time/ctime.c"

	depends LibCDiagnostic
	depends LibCMisc
	depends LibCStdlib
	depends LibCString
	depends LibCMath
	depends	LibCStdio
/* not here */
	source "shell/tokenizer.c"
	source "readline/readline.c"

//	source "stacktrace.c"
}

@DefaultImpl(LibCFsNone)
abstract module LibCFs { }

static module LibCFsPosix extends LibCFs {
	source "stdio/stdio.c"
	source "stdio/putchar.c"
	source "stdio/getchar.c"
	depends embox.compat.posix.LibPosixFsApi
}

static module LibCFsNone extends LibCFs {
	source "stdio/getchar_nofile.c"
	source "stdio/putchar_nofile.c"
}
