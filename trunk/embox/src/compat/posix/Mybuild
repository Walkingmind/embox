package embox.compat.posix

static module LibPosix {
	@IncludePath("$(SRC_DIR)/compat/posix/include")

	depends LibPosixUtil
	depends LibPosixProc
	depends LibPosixIdx

}

static module LibPosixUtil {
	source "getopt.c", 
		"utsname.c", 
		"time.c"
	depends embox.util.LibUtil
}

static module LibPosixProc {
	source "exec.c",
		"fork.c",
		"wait.c" 
	depends embox.util.LibUtil
}
	
static module LibPosixIdx {
	source "isatty.c",
		"select.c",
		"dup.c"
	depends embox.kernel.task.api
	depends LibPosixFsApi
	depends embox.util.LibUtil
}

@DefaultImpl(LibPosixFsNone)
abstract module LibPosixFsApi { }

static module LibPosixFs extends LibPosixFsApi {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "file.c", "fs.c"

	depends embox.kernel.task.api 
	depends embox.kernel.task.idx_table
	depends embox.fs.posix_compat
	depends embox.kernel.task.errno
	depends posix_env
}
static module LibPosixFsNone extends LibPosixFsApi {
	source "file_fs_none.c"
}

@DefaultImpl(bootstrap_posix_env)
abstract module posix_env { }

module bootstrap_posix_env extends posix_env {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "env/bs_posix_env.c"

	depends embox.kernel.task.api
	depends embox.driver.virtual.diag_device
}

