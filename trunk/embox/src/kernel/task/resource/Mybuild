package embox.kernel.task.resource

module affinity {
	source "affinity.c"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
}

module env {
	option number env_per_task=8
	option number env_str_len=32
	source "env.c", "env.h"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
	@NoRuntime depends embox.lib.LibCString
	@NoRuntime depends embox.util.Array
}

module errno {
	source "errno.c"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
}

module idesc_table {
	option number idesc_table_size=64
	source "idesc_table.c", "idesc_table.h"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.kernel.task.idesc
	@NoRuntime depends embox.lib.LibCAssert
}

module mmap {
	source "mmap.c"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.mem.mmap_api
	@NoRuntime depends embox.lib.LibCAssert
}

module security {
	option number security_size
	source "security.c"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
	@NoRuntime depends embox.lib.LibCString
}

module sig_table {
	source "sig_table.c"

	depends embox.kernel.sched.sched
	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
	@NoRuntime depends embox.lib.LibCString
}

module thread_key_table {
	source "thread_key_table.c", "thread_key_table.h"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.kernel.thread.mutex
	@NoRuntime depends embox.kernel.thread.thread_local
	@NoRuntime depends embox.lib.LibCAssert
	@NoRuntime depends embox.util.indexator
}

module u_area {
	source "u_area.c"

	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
}

module waitpid {
	source "waitpid.c"

	depends embox.kernel.sched.wait_queue
	depends embox.kernel.task.task_resource
	@NoRuntime depends embox.lib.LibCAssert
}
