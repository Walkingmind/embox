#How to work with usb device port

= Общая информация =

Существуют различные режимы передачи данных по каналу usb: control, isochronous, bulk и interrupt. Для начала нас будут интересовать толлько Control транзакции.


= Control транзакции =

Control транзакция состоит из трёх этапов

==Setup== 
На этом этапе хост посылает запрос в котором сообщает направление передачи, тип запроса, количество байт, которые будут переданы и.т.д. 


==Data== 
Опциональный этап, на котором передаются 1 или несколько пакетов с какой-то полезной информацией.

==Status== 
Передаётся пакет в сторону, обратную той. куда отправлялись пакеты во время data этапа.

=Подробнее о Control транзакциях=

==Setup== 
О том, что к нам пришёл пакет типа setup  сигнализирует установленный бит RXSETUP в регистре UDP_CSRx (x - номер endpoint'а). В таком случае надо считать пакет из FIFO и очистить RXSETUP(установленный RXSETUP предохранит данные от "затирания" следующим пришедшим пакетом).

==Data== 
Пакеты этого типа бывают двух видов и различаются направлением передачи.
===Data IN(от девайса к хосту)=== 
1)Проверяем, можно ли писать в FIFO по состоянию бита TXPKTRDY регистра UDP_CSRx. Затем пишем в FIFO пакет данных, которые нужно передать, и устанавливаем TXPKTRDY. 
2)О том, что пакет был отослан можно выяснить по установленному биту TXCOMP регистра UDP_CSRx. 
3)Очищаем TXCOMP, затем пишем следующий пакет данных согласно пункту 1) до тех пор, пока не перешлём всё, что хотим.
4)В конце TXCOMP должен быть очищен.
===Data OUT(от хоста к девайсу)===
1)Когда в FIFO приходит пакет, устанавливается бит RX_DATA_BK0 регистра UDP_ CSRx и случается прерывание.
2)Количество байт, записанных в FIFO, можно выяснить, считав биты RXBYTECNT регистра UDP_ CSRx.
3)Данные из FIFO можно считать через регистр UDP_FDRx.
4)После завершения чтения необходимо очистить бит RX_DATA_BK0, чтобы можно было принять следующий пакет.
5)Повторить с пункта один, пока не закончатся пакеты.

==Status==
===Status IN===
Если хост посылал пакеты на этапе Data, то он будет ожидать пакета Data, не содержащего данных(нулевой длины).
===Status OUT===
Если хост принимал пакеты, то он посылает пакет Data, не содержащий данных.