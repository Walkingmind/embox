#summary One-sentence summary of this page.

= Многозадачность =

== Распределение процессорного времени ==

*Многозадачность* - свойство операционной системы выполнять несколько вычислительных задач одновременно.
Для достижения параллельного выполнения задач на одном процессоре используют принцип псевдопараллельности. Когда время процессора распределяется между задачами. Существуют разные типы псевдомногозадачности:

  * Невытесняющая многозадачность
  * Кооперативная многозадачность
  * Вытесняющая многозадачность


*Невытесняющая* многозадачность является одним из простейших видов многозадачности. В таком случае в системе может быть загружено одновременно несколько задач, но фактически процессорное время выделяется только одной активной задаче. Переключение задач происходит либо когда активная задача заканчивается либо когда она входит в цикл какого то внешнего события. Такой метод планирования использовался раньше, например  в MS-DOS. Сейчас фактически не используется, поскольку активизация той или иной задачи ложится на плечи прикладного программиста, и прикладная задача может захватить процессор на любое время.
Сейчас используются алгоритмы под общим названием time-sharing (разделения времени). В этих алгоритмах выделяют специальный модуль в ядре ОС планировщик. Этот модуль занимается распределением времени. К этим типам многозадачности относят кооперативную и вытесняющую (приоритетную) многозадачность.
При *кооперативной* многозадачности текущая активная задача сама отдает свое процессорное время планировщику, и тот уже выбирает следующую активную задачу. Такой метод не безопасен, поскольку прикладной поток может занять все процессорное время. Но он используется, например, в ядре линукса или в POSIX потоках при создании потоков с флагами SCHED_RR или SCHED_FIFO, а также в Windows. В Windows время получает задача которой прислали сообщение, и пока она его не обработает она не вернет время планировщику. Такой метод очень просто реализуется и является эффективным с точки зрения ресурсов, но он перекладывает ответственность за эффективное управление процессорным временем на плечи разработчика, поэтому применяется в хорошо проверенных местах.

При *вытесняющей* многозадачности планировщик выделяет квант времени каждой задаче. По истечению кванта планировщик приостанавливает выполнение задачи, осуществляет поиск следующей задачи, которой и передает следующий квант. Процесс поиска называется планированием, и он может быть произведен по различным алгоритмам. Эти алгоритмы принято называть стратегией планирования. Выделяют два типа планирования
 * Статическое
 * Динамическое
Большинство систем построено по принципу динамического планирования, то есть система во время работы в зависимости от ситуации решает какой задаче отдать процессорное время. При статическом же планировании процент задаче задается процент предоставляемого времени или приоритет задачи. В зависимости от этих установок планировщик и принимает решение какой задаче предоставить право выполнения. Этот подход используется например в виртуальных машинах, а также с системах жесткого реального времени, где необходима математическая верификация времени выполнения задачи.


== Распределение ресурсов ==

Кроме процессорного временив системах существуют другие ресурсы за которые борются различные задачи, например устройства, или доступная память. Например, даже для реализации невытесняющей многозадачности, необходимо где то хранить код активизируемых задач, а также переменные которые эта задача использует.
