#summary Описание пакета 'kernel' в системе Embox.

== Описание пакета ==

Пакет kernel содержит пакеты интерфейсы и модули относящиеся с ядру системы, Обычно эти модули не могут быть перемещены в пользовательский режим.
К таким частям относятся например обработчики прерываний и исключений, методы планирования потоков и загрузочный модуль.

Часто подобные интерфейсы требуют конкретной реализации из пакета [EmboxHalPacket hal].

== Состав пакета ==

=== kernel.irq ===
irq (!Interrupt !ReQuest) - модуль для работы с аппаратными прерываниями. 

Содержит подпрограммы для работы с hwirq прерываниями (захват прерывания освобождение и обработчик аппаратно независимых прерываний)

Требует для работы аппаратный контроллер прерываний и для работы обработчики первого уровня (архитектурно зависимые) и таблицу прерываний.

=== kernel.softirq ===
Вариант отложеннных аппаратных прерываний.

Поскольку ваполнение непоторых действий в контексте обработчика аппаратных прерываний нежелательны (чтобы недопустить блокировки прерываний), используют различные варианты отложенных действий, то есть извещают другие части системы о том что необходимо выполнить какие либо дейстивя. В системе Minix и других системах с микроядерной архитектурой традиционно используют механизм сообщений. Сообщение ставится в очередь к какому нибудь потоку и только на это время блокируются аппаратные прерывания. В нашем случае механизм программных прерываний также может быть реализован через механизм сообщений, но вполне достаточно установить неких бит в какой либо переменной, и проверить этот бит когда будут разрешены дополнительные действия, то есть все аппаратные прерывания будут обработаны.


Интерфейс работы с подобными прервываниями похож на работу с обычными аппаратными прерываниями, то есть необходимо зарегистрировать обработчик прерываний, который будет выполнен когда возникнет данное событие. Отличие от аппаратного прерывания в том что необходимо самостоятельно инициировать данное событие с помощью функции softirq_raise().

=== kernel.task ===
Реализация механизма многозадачности в системе. Однозадачная система подмножество многозадачной.
Управляет распределением ресурсов процессорного времени в системе, осуществляет планирования по заданой политике, вызывает переключение аппаратного контекста процессора и так далее.
Пакет содержит 
 * task.thread модуль для потоков 
 * task.sched модуль планировщика 
 * task.sched_policy модули политик планирования

=== Kernel.time ===
Содержит службу времени и таймеров в системе. включает в себя следующие части
 * time.time - служба абсолютного (не реализована) и относительного времени
 * time.clock - служба различных источников тиков в системе (аппаратные таймеры, аппаратные счетчики, программные счетчики).
 * time.timer - служба программных таймеров
 * time.watchdog - служба сторожевых таймеров
 * time.interval - служба интервальных таймеров, для замера каких то временых интервалов




 
