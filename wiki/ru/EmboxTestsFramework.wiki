#summary Систему тестирования

<wiki:toc max_depth="3" />

= Тесты =

В сборку системы входит набор тестов для диагностики. 

Тесты могут выполняться как в автоматическом режиме, при старте системы
(самодиагностика системы), так и в ручном режиме пользователем. При вызове в
автоматическом режиме тесты выдают соответствующие информационные сообщения.
При работе в ручном режиме используется команда `test`. С ее помощью можно как
получить информацию о доступных тестах в системе и результатах их выполнения,
так и запустить требуемый тест на исполнение.

Состав тестов и их параметры, как и другие части системы, можно конфигурировать,
не изменяя исходных кодов самих тестов. Процесс добавления в систему нового теста
и его конфигурации описан ниже.

= Добавление теста =

Исходные коды тестов находятся в папках `src/tests/` и `platform/<platform>/tests/`.
Для добавления нового теста в систему в одной из этих папок нужно создать свою
папку с тестом (см. шаблон `src/tests/_template`). В ней обязательно должны быть
как минимум 2 файла следующего содержания:

 * Файл с исходным кодом теста
 * Makefile для сборки этого теста в системе

== Требования к исходному коду теста ==

Тесты представлены в системе как модули пакета `embox.test` или `<platform>.test`.
Для того, чтобы система могла распознать тест, его нужно определить следующим образом:

 * Реализовать функцию выполнения теста.
 * Объявить тест в системе с помощью соответствующего макроса.

=== Функция выполнения ===

Каждый тест должен иметь функцию выполнения, которая запускается системой при
вызове данного теста, со следующей сигнатурой:
{{{
int run(void);
}}}
Функция возвращает 0 в случае прохождения теста и любое другое значение, если
тест не пройден. Если для теста задана функция подробного описания, то это
значение будут передано ей в качестве аргумента.

=== Макрос для объявления теста ===

Для объявления теста в системе необходимо указать некоторую информацию, в
первую очередь, функция выполнения теста. Это делается с помощью следующего
макроса, объявленного в файле <embox/test.h>:
{{{
EMBOX_TEST(run);
}}}

=== Пример кода минимального теста ===

{{{
#include <embox/test.h>

EMBOX_TEST(run);

/**
 * The test itself.
 *
 * @return the test result
 * @retval 0 on success
 * @retval nonzero on failure
 */
static int run(void) {
	int result = 0;

	/*
	 * The test itself.
	 */

	return result;
}
}}}

== Требования к  содержимому Makefile ==

 * Makefile должен быть описан так:
{{{
$_MODS += <test_name>

$_SRCS-<test_name> += *.c
}}}

В Makefile могут быть описаны зависимости от других модулей системы, например:
{{{
$_DEPS-<test_name> += <dep>
}}}

Если в качестве Makefile использовался шаблонный файл, взятый из
`src/tests/_template`, то в простейшем случае ничего изменять не потребуется.
Тест будет назван именем содержащей его папки и будет включать все исходники
с расширением `.c`. Подробности - в комментариях внутри файла.

= Конфигурирование теста =

Необходимо добавить в файл конфигурации `mods-tests.conf` запись о новом тесте:

{{{
test(<test_name>, <runlevel>)
}}}
или
{{{
test_platform(<test_name>, <runlevel>)
}}}
для тестов платформо-зависимых частей системы.
Где:

 * `<test_name>` - имя модуля теста, заданное в Makefile'е.
 * `<runlevel>` - (необязательно) уровень выполнения системы, на котором следует запускать тест

Любой тест можно запустить вручную командой `test`.
