#summary Описание подсистемы времени

Одним из важных компонентов любой ОС является подсистема времени, ответственная 
за отмеривание временных интервалов.

В состав служб подсистемы входит:
 * система таймеров (позволяет выполнять заданное действие через 
 определённый промежуток времени, однократно или периодически) 
 * система сторожевых таймеров (выполняется прерывание после превышения временного
лимита, когда система не получает регулярного сообщения от пользователя)
 * служба относительного времени (время, прошедшее со старта системы)

Характеристическим свойством ОС РВ, помимо прочих, является 
точная
и
гибко настраиваемая 
подсистема времени.

Подсистема использует все аппаратные устройства, генерирующие прерывания через
заданный промежуток времени: часы, сторожевые таймеры;
позволяя пользователю не задумываться об аппаратной поддержке требуемой 
функциональности.

http://embox.googlecode.com/svn/wiki/images/KernelTimeSystem/arch.png

== Принцип работы ==

=== Инициализация == 
Во время инициализации драйверов часов и сторожевых таймеров они посылают сообщение
подсистеме о своём наличие. 

После подсистема настраивает устройства с оптимальными 
характеристиками для того, чтобы
обеспечить приемлемую точность, но и не нагружать систему частыми прерываниями,
устанавливает для устройства обработчик прерывания.

=== Установка таймера ===
Во время установки таймера, периодического либо однократного, подсистема выбирает среди
имеющихся устройств такое, что точность устройства наиболее подходит для временного 
интервала таймера. Подсистема так же размещает информацию о таймере в приоритетной 
очереди устройства (структура данных, позволяющая за реальное время получить 
информацию о таймере, до истечения которого осталось 
наименьшее время).

=== Срабатывание таймера ===
Каждый заданный интервал каждое устройство генерирует прерывание. Обработчик прерывания
декрементирует счётчик только самого приоритетного таймера, что обеспечивает декремент за 
реальное время. 

По истечению времени таймера происходит отложенный до выхода из прерывания
вызов обработчика таймера (действия, определённого пользователем), заново выбирается самый
приоритетный таймер.
