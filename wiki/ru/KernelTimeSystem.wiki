#summary Описание подсистемы времени

Одним из важных компонентов любой ОС является подсистема времени, ответственная 
за отмеривание временных интервалов.

В состав служб подсистемы входит:
 * система таймеров
 * система сторожевых таймеров
 * служба относительного времени

Характеристическим свойством ОС РВ, помимо прочих, является 
точная
и
гибко настраиваемая 
подсистема времени.

Подсистема использует все доступные аппаратные устройства, генерирующие 
прерывания через заданный промежуток времени: часы, аппаратные сторожевые 
таймеры. Подсистема всегда предоставляет единый интерфейс, даже если в 
аппаратном обеспечении отсутствует какой-либо тип устройства,
позволяя пользователю не задумываться об аппаратной поддержке требуемой
функциональности.

http://embox.googlecode.com/svn/wiki/images/KernelTimeSystem/arch.png

== Инициализация == 
Во время инициализации драйверов часов и аппаратных сторожевых таймеров 
они посылают сообщение подсистеме о своём наличие. 

После подсистема настраивает устройства с оптимальными характеристиками для 
того, чтобы обеспечить требуемую точность, но и не нагружать систему частыми
прерываниями, устанавливает для устройства обработчик прерывания.

== Принцип работы таймера ==

Таймер используется для выполнения заданного действия через определённый интервал времени.
Таймеры делятся на однократные (выполняются один раз) и периодические (выполняются через
каждый указанный интервал).

=== Установка таймера ===

Во время установки таймера, периодического либо однократного, подсистема выбирает среди
имеющихся устройств такое, что точность устройства наиболее подходит для временного 
интервала таймера. Подсистема так же размещает информацию о таймере в приоритетной 
очереди устройства (структура данных, позволяющая за реальное время получить 
информацию о таймере, до истечения которого осталось 
наименьшее время).

=== Срабатывание таймера ===

 * Каждое устройство генерирует прерывание в указанный интервал времени. Обработчик прерывания декрементирует счётчик только самого приоритетного таймера, что обеспечивает декремент за реальное (константное) время. 

http://embox.googlecode.com/svn/wiki/images/KernelTimeSystem/dec_not_zero.png

 * Как описано в [KernelCritical], в контексте прерывания выполняется только декремент даже, если таймер истек.

http://embox.googlecode.com/svn/wiki/images/KernelTimeSystem/dec_zero.png

 * Вызов обработчика таймера (действия, определённого пользователем), выбор нового самого приоритетного таймера откладываются и выполняются только по выходу из контекста прерывания.

http://embox.googlecode.com/svn/wiki/images/KernelTimeSystem/dec_zero_process.png

== Принцип работы сторожевого таймера ==

Сторожевой таймер используется для контроля времени выполнения различных участков приложений.
После инициализации со временным лимитом, который не может быть превышен, приложение должно
посылать таймеру регулярные сообщения о корректном функционировании. Если после
приема последнего сообщения проходит больше отведенного времени, приложения
считается зависшим, тогда сторожевой таймер запускает установленный на этот
случай обработчик.

Сторожевые таймеры используют либо аппаратные сторожевые таймеры, либо строятся
на основе простых однократных таймеров. В последнем случае, для каждого
сторожевого таймера заводится особый таймер, у которого время до истечения может
быть сброшено без выполнения обработчика. Тогда по сообщению от корректно
работающего приложения время соответствующего таймера сбрасывается; а таймер
зависшего приложения истекает.

== Принцип работы относительного времени ==

Относительное время является временем, прошедшим со старта системы.
Относительное время используется в других разных службах, среди которых
получение псевдослучайного числа, вычисление абсолютного времени.

Для этой службы используется одно из устройство часов (системные часы). В приоритетную очередь
системных часов заносится специальный таймер со временем равным такту часов, обработчик которого 
обновляет внутренние структуры данных о прошедшем времени; либо используется специальный обработчик
прерывания, обновляющий данные о времени прямо в теле функции, что снижает накладные расходы.
