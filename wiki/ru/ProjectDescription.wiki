#summary Краткое описание проекта embox.

= Introduction =
Современные вычислительные систем применяются в очень большом спектре задач, начиная от управления двигателями и до огромных дата центров, которые обслуживают множество пользователей в реальном времени. Для различных задач требуется и различное количество ресурсов, и требования к ним также различные. Соответственно, программное обеспечение, которое им управляет тоже имеет свои особенности. Особенно ярко это заметно в сегменте встроенных систем, в них часто применяют ОС мягкого либо жесткого реального времени. От таких ОС ожидают предсказуемости реакции в любой ситуации, то есть отсутствия отказов системы. Такие отказы возникают, как правило, при ошибке в ядре системы. Наибольшее же количество таких ошибок например в Линуксе находится в драйверах, поскольку как известно драйвера разрабатываются производителями оборудования, и уровень кода, в этих частях ниже чем в кусках созданных, разработчиками ядра ОС. К тому же драйвера в монолитном ядре, к которым относится Линукс трудно отлаживать. 
Все это накладывает отпечаток на процесс проектирования встроенных систем. В подобных системах, при создании нового оборудования, сначала создаются низкоуровневые тесты, затем разрабатывается код драйверов системного загрузчика, и только потом разрабатывается драйвер в составе основной операционной системы. Происходит дублирование кода, следовательно, увеличение количества ошибок.

*embox* представляет из себя конфигурируемую модульную ОС. В отличие от монолитных ядер, весь код ядра EMBOX располагается в различных пакетах (библиотеках), которые реализуют различные интерфейсы, например интерфейс диспетчера памяти. Только требуемые части системы включаются в конечный образ. Это может происходить либо на этапе конфигурации и сборки системы, либо уже на этапе выполнения (не все модули могут подгружаться на этапе выполнения).

Таким образом из embox можно собрать как элементы тестовой системы, так и системного загрузчика и основную ОС. Таким образом, не только уменьшается количество ошибок, но и экономятся ресурсы системы. 

Основной сферой применения embox являются встроенные системы, где требуется предсказуемость реакции на событие и зачастую ограниченность ресурсов. На данный момент проект применяется в нескольких коммерческих проектах, а также портирован на платформу lego-mildstorms.

