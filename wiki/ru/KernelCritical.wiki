#summary О механизме Critical

*Critical API* - внутренний механизм ядра для контроля над текущим контектом исполнения. Контекст исполнения определяется прежде всего по _условиям_, при которых исполнение может попасть в этот контекст, и по _возможностям_, доступным коду, работающему в этом контексте.

Для упрощения понимания контекстов рассмотрим обработчик прерывания как один из примеров:
 * Прерывание может возникнуть, только при условии, что его приоритет выше текущего Уровня Допустимых Прерываний (IPL). Иными словами: прерывания не были запрещены с помощью `ipl_save()`, и в данный момент не происходит обработка более приоритетного прерывания.
 * Код обработчика прерывания имеет доступ лишь к ограниченному набору ресурсов. К примеру, он может будить потоки, ждущие наступления какого-либо события, но он не может захватывать мьютекс или создавать новые потоки.

В системе возможны разные контексты исполнения в зависимости от конфигурации.

|| || Переключение потоков || Обработка программных прерываний || Обработка аппаратных прерываний ||
|| Вне критического контекста || <font color="green">*Разрешено*</font> || <font color="green">*Разрешено*</font> || <font color="green">*Разрешено*</font> ||
|| В блоке `sched_lock` || <font color="maroon">*Запрещено*</font> || <font color="green">*Разрешено*</font> || <font color="green">*Разрешено*</font> ||
|| В обработчике программного прерывания || <font color="maroon">*Запрещено*</font> || <font color="olive">*Зависит от приоритета*</font> || <font color="green">*Разрешено*</font> ||
|| В блоке `softirq_lock` || <font color="maroon">*Запрещено*</font> || <font color="maroon">*Запрещено*</font> || <font color="green">*Разрешено*</font> ||
|| В обработчике аппаратного прерывания || <font color="maroon">*Запрещено*</font> || <font color="maroon">*Запрещено*</font> || <font color="olive">*Зависит от приоритета*</font> ||
|| В блоке `irq_lock` || <font color="maroon">*Запрещено*</font> || <font color="maroon">*Запрещено*</font> || <font color="maroon">*Запрещено*</font> ||