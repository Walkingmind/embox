#summary HAL description, interface
 
Для абстракции от оборудования был представлен HAL (Hardware Abstract Layer). Уровень позволяет получить доступ к аппаратно-специфичным функциям: 

 * Ограничение доступа к I/O 
 * Контроль времени 
 * Ловушки для инструкций 
 * Контроллер управления памяти (Memory Management Unit, MMU)
 * Привелегированный режим работы 
 * Атомарность

= Подробнее =

== [EmboxTrapsDescription Ловушки для uнструкций]  ==

Поддержка исключений, сгенерированных привелегированными инструкциями. Реализуется самим HAL с помощью установки соответствующих обработчиков для исключений. Исключения могут быть опционально переданы более высоким уровням.
== Привелегированный режим работы == 

Только HAL работает в привелегированном режиме. Более высокие уровни не могут совешать привелегированные операции. Единственный способ выполнить привелегированную функцию заключается в том, чтобы использовать интерфейс HAL.

== I/O Access Limitation ==

Ограничение доступа к устройствам на более высоких уровнях. Осуществляется привелегированным режимом работы (для доступа посредством специальных инструкций) и MMU (для доступа посредством отображения памяти)

== Timing Control ==

Интерфейс для аппаратных часов. Описывает функцию `setup`, используемую для определения периода прерываний, генерируемых часами.

== Контроллер управления памяти ==

Интерфейс для котроллера памяти для контроля процесса отображения адресов. Состоит из функций:
 * `mmu_on` -- Включить управление
 * `mmu_disable` -- Выключить управление 
 * `mmu_map_region` -- Отобразить физическую область памяти на виртуальную 
 * `mmu_get_fault_addr` -- Получить виртуальный адрес последней ошибки 

Virtual page interface. Consists of getters and setters for page options:
Интерфейс для страниц. Состоит из функций устанавливающих и читающих опции страниц:
 * Доступ на запись 
 * Доступ на исполнение
 * Доступ на кэширование

== Atomicity ==

Интерфейс для предоставляемых оборудованием атомарных операций. Эти операции используются, наприме. для синхронизации. Определена операция `test-and-set`, которая читает значение, и, в случае, если значение ноль, устанавливает его ненулевым, затем возравщает прочитанное значение.
