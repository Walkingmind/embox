#summary Описание примера "Текстовое меню"

== Oбщее описание ==
<img src="http://embox.googlecode.com/svn/wiki/images/Platforn_lego_menu_close.png" width="320" height="240">
 На экране робота появляется список доступных тестов и указатель. Для управления используются кнопки на роботе: 
  * Raght - переместить указатель вниз по списку
  * Left - переместить указатель вверх по списку
  * Enter (оранжевая кнопка посередине) - запустить текущий тест. Текущим является тест, помеченный указателем
  * Down - выйти из меню. После выхода начинается исполнение тестов в порядке, заданном в config-файле 
  Замечание: список тестов не является цекличиским. Если текущим является первый в списке тест (последний в списке тест), то нажатие кнопки Left (кнопки Raight соответственно) не приведут к смене текущего теста.
  После выполнения какого-либо теста меню завершает свою работу. Для нового входа в меню необходимо перезагрузить робота.       
== Подготовка к запуску ==
=== Робот ===
==== Необходимые части ====
 * NXT Brick
==== Сборка ====
 Не требуется
=== ПО ===
==== Сборка ====
 В консоли перейдите в корневую папку проекта. Выполните
 {{{
 	make PROJECT=arm PROFILE=nxt_menu_and_graphic config
 	make
 }}}
 В ходе сборки в консоль выводятся информационные сообщения. В случае успешной сборки выведется
 {{{
 	Build complete
 }}}
==== Загрузка ====
 Результатом сборки является образ `/build/base/bin/embox.bin`. Загрузите его как описано [PlatformLegoNxtFlashing здесь].

==== Подробная информация ====
	Тест выполняет одну функцию, которая начинает работу меню. Данная функция не имеет параметров, но обращается к списку включенных тестов доступныйх, в файле conf/mods-tests.conf  
	{{{
	   menu_start();
	}}} 
	В ходе идентификации устанавливаются три указателя: визуальный - указывает на текущий тест и позволяет исполнять выбранный тест; невизуальные - указывают на первый и последний выводимые на экран тесты - необходимы для того, чтобы не выходить за перделы списка и перехода к тем тестам, которые в данный момент времени не выведены на экран.
	Изначально на экран выводится список первых 8-ми тестов ( высота экрана - 64 пикселей, при высоте строки в 8 пикселей на экран помещается 8 строк ) с отступом в 8 пикселей (для установления визуального указателя) и визуальный указатель на текущий элемент (изначально первый).
	{{{
	   print_list_test(current_test); 				// вывод списка
	   display_draw(0, 0, 1, 1, &pointer_buff[0]);  // визуальный указатель на первом месте
	}}}
	Далее в цикле проводится проверка на нажатие клавиши
	{{{
	   	i = 1;
	while (i>0){
		buts = nxt_buttons_was_pressed(); // фиксирование нажатой клавиши
		usleep(600);					  // Небольшая задержка необходима т.к. реакция человека намного медленние работы робота
		if (buts & BT_RIGHT){			  // Нажата правая кнопка - переход к следующему пункту
			...
		}
		if (buts & BT_LEFT){			  // Нажата левая кнопка - переход к предыдущему пункту
			...
		}
		if( buts & BT_ENTER ){			  // Нажата средняя кнопка - выполнение текущего теста
			...
		}
		if (buts & BT_DOWN ){			  // Нажата нижняя кнопка - выход из меню
			i = 0;
		}
		buts = 0;						  // Сброс нажатой клавиши
	}
	}}}
	Обработка нажатия клавиши вправо - переход к следующиму (влево - переход к предыдущиму)проходит следующем образом: проверка - является ли тест последним (первым) из тех тестов, которые выведены на экран - если нет, то визуальный указатель смещается на один тест вниз (верх) по списку, при этом сам список не изменяется. Если список является последним, то проходит проверка - является ли текущий тест последним (первым) в списке всех тестов: если да, но ничего не происходит, если нет, то происходит смещение вниз (вверх) текущего указателя, максимльного и минимального указателей выводимых на экран тестов, происходит смещение списка на один тест вниз (вверх).
	{{{
		if (current_test == max_cur_test) { 					// Является ли последним тестом, выведенным на экран
			if ( max_cur_test < (number-1) ){					// Является ли последним тестом, в списке всех тестов
				min_cur_test++;									// Смещение указателей
				max_cur_test++;
				current_test++;
				display_clear_screen();							// Очистка экрана - подготовка к выводу смещённого списка* 
				print_list_test(current_test - 7);				// Вывод на экран смещённого списка тестов 
				display_draw(0, 7, 1, 8, &pointer_buff[0]);		// Вывод на экран визуального указателя
			}
		} else {												// Текущий тест не является последним в списке выводимых
			current_test++;
			display_draw(0, current_test - min_cur_test, 1, 8, &pointer_buff[0]);		// Вывод визуального указателя на новом месте
			display_draw(0, current_test - 1 - min_cur_test, 1, 8, &space_buff[0]);		// Ликвидация визуального указателя на старом месте
		}
	}}}
	*Данная строчка может быть исключена из кода. В этом случае вывод нового списка будет происходить перетирая предыдущие значения буффера экрана и в момент перерисовывания происходит мильтишение, неприятное человеческому глазу. Наличие данной строки гарантирует очистку экрана перед выводом нового списка, но это происходит достаточно медленно - визуально заметно.
	
	Выполнение теста производится одной функцией, возвращающие тип int:
	{{{
		j = test_suite_run( &__test_registry[current_test]);
	}}}
 	Также используются несколько вспомогательных функций: 
 	{{{
 		int n_of_t(void)					// Функция возвращает общее колличество тестов
 		
 		void print_list_test(int first)		// Функция принимает номер теста и начиная с него выводит названия 8-ми тестов на экран 
 	}}}