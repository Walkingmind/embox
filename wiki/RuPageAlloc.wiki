= Что это =
Алгоритм *page alloc*, предназначен для выделения/освобождения из пула по одной странице. В силу специфики алгоритма, говорят, он не рекомедуется для работы в виртуальном режиме.

= Описание = 
Алгоритм реализован на том, что в каждом свободном блоке (множестве подряд идущих еще/уже не выделенных страниц) находится структура, которая указывает на следующий и предыдущий пустой блок. Список замыкается, и, таким образом, мы имеем кольцевидную структуру, которая описывает всю свободную память. В конечном итоге выделение/освобождении отдельной страницы сводится к модификации этого списка.

= File list =
./src/include/lib/page_alloc.h
./src/lib/page_alloc/page_alloc.c
./src/tests/page_alloc/test_page_alloc.c
./extend_test/page_alloc/config.h
./extend_test/page_alloc/test_page_alloc.c

= Интерфейс =
В режиме компиляции под embox доступно:
  * void\* page_alloc() 
  * void page_free(void\*)

В режиме компиляции для тестирования под хост машиной:
  * void\* page_alloc()
  * void page_free(void\*)
  * PAGE_SIZE
  * PAGE_QUANTITY
  * get_cmark_p() возвращает указатель на кольцевую структуру описывающую свободную память.
  * page_alloc_init() нужна для принудительной инициализации аллокатора.

= #DEFINE's =
* EXTENDED_TEST собственно указывает на то, что компилим под хост
* PAGE_SIZE, PAGE_QUANTITY размер, кол-во страниц соответственно. При компиляции под embox берутся значения описанные в page_alloc.c, если же компилируем под хост-машину, значения берутся из page_alloc.h.

config.h
  * DONOTUSE_PAGE_ALLOC для тестирования тестировщика (вроде никому кроме меня не должно понадобится)
  * INTERACTIVE_TEST интерактивное тестирование, вместо случайного генерирования тестов
  * VERBOSE_DEBUG_OUT вывод дополнительной информации, например такой как, списочной структуры описывающей свободную память после каждого теста.
  * STACK_POP_FROM_HEAD меняет порядок удаления при тестировании. (имеет смысл держать отключеной)
  * TEST_COUNT кол-во тестов.
  * MAX_PAGE_FOR_ALLOC максимальное кол-во страниц которое мы хотим, что бы могло запрашиваться каждым тестом.

= USE = 
Для нормальной работы, необходимо выставить правильные значения PAGE_SIZE, PAGE_QUANTITY, START_MEMORY_ADDR (начало пула) в page_alloc.c