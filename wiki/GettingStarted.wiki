#summary How to get envolved to Embox

= Introduction =

This wiki describes simple way get first Embox image running x86 simulator (QEMU).
= Environment = 
== Windows(R) (Cygwin) ==

Install [http://cygwin.com/ cygwin]. During normal installation you'll be asked for additional pacakages. Necessary packages are: make, gcc. It's recommended to use [http://code.google.com/p/embox/wiki/Downloads?tm=2#Tools our] build of gcc as one known to work. So, check make (gcc is optional, if you haven't preffer our build). 

Read more in detail [InstallToolchainWindowsCygwin here].

== Linux ==

Linux boxes usually already have working compilation environment. If You have no, simply install gcc and make with Your packet manager. For example, there is metapacket on Ubuntu for those things, installing is quite simple
{{{
$ sudo apt-get install build-essential
}}}

= Compiling Embox =

So, You've installed build environment, now it's time to make you first Embox build. As Embox is highly configureable, i.e. consits of a set of modules which are configured with options, compiling is not just typing "make" on console, first You need describe configuration. Embox is bundled with a set of common config templates for various architectures and purposes. Configuring is much more easy by modifying from some start point.

Go for embox root dir (i.e. which consists of conf/, src/, ...)
{{{
$ cd embox
}}}
You can copy template to freely modify config by
{{{
$ make config PROJECT=arch PROFILE=purpose
}}}
or
{{{
$ make menuconfig
}}}
This will copy templates/arch/purpose/ content to conf/. As You see, templates a stored in templates/ with appropriate subdirs. Only content of templates/ defines avaible templates.

For example, if You want play with Embox just as on real machine, configure with 
arch=x86 and purpose=debug (this means a large subset of options and modules on), e.g.:
{{{
$ make config PROJECT=x86 PROFILE=debug
}}}
Next, you can optionally change config as described [here]

At now You can build Embox just typing 
{{{
$ make
}}}
It's smart build-system resolves all dependecies and automatically includes those to image.

= Run =

Now, You have Embox image ready to run. You can place image on disk and boot it with grub as described [here], or run it on simulator. We usually use second choise for easear debug. As You've build x86 version, run it on qemu (various parameters for qemu can be found [http://code.google.com/p/embox/wiki/InstallToolchainSimulation#QEMU here]). Very simple is 
{{{
$ qemu -kernel build/base/bin/embox
}}}
New window opens with Embox to play with.