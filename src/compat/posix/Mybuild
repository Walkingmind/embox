package embox.compat.posix

module LibPosix {

	depends embox.compat.posix.util.All
	depends embox.compat.posix.proc.All
	depends embox.compat.posix.idx.All
	depends FileApi 
	depends FS 
}

static module FS {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "fs.c"

	depends embox.kernel.task.errno
}
	
@DefaultImpl(FileDiag)
abstract module FileApi { }

module FileTasks  {
	depends FileTasksOpen
	depends FileTasksBasic
}

static module FileTasksOpen {
	source "file_tasks_open.c"
	depends embox.fs.posix_compat
	depends embox.kernel.task.errno
}

static module FileTasksBasic extends FileApi {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "file_tasks.c",
		"isatty.c"

	depends embox.kernel.task.api 
	depends embox.kernel.task.idx_table
	depends embox.kernel.task.errno
	depends posix_env
	depends io_sync_api

}

static module FileDiag extends FileApi {
	source "file_diag.c"
}

@DefaultImpl(bootstrap_posix_env)
abstract module posix_env { }

module bootstrap_posix_env extends posix_env {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "env/bs_posix_env.c"

	depends embox.kernel.task.api
	depends embox.compat.posix.idx.dup
}

@DefaultImpl(io_sync_simple)
abstract module io_sync_api {
	depends embox.kernel.irq_lock
}

module io_sync_simple extends io_sync_api {
	source "io_sync_simple.c"
}

module io_sync extends io_sync_api {
	source "io_sync.c"
	depends embox.kernel.thread.event
}
