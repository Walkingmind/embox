package embox.compat.posix.fs

@DefaultImpl(all_old)
abstract module all {
}

module all_old extends all {
	depends file,
		chdir,
		dirent,
		fsop,
		getcwd,
		umask,
		xattr,
		libgen
}

@DefaultImpl(file_old)
abstract module file {
}

static module file_old extends file {
	depends file_ops
	depends lseek
	depends open
}

@DefaultImpl(chdir_old)
abstract module chdir {
}

static module chdir_old extends chdir {
	source "chdir.c"

	depends embox.compat.posix.util.environ
	depends embox.compat.libc.all
}

@DefaultImpl(dirent_old)
abstract module dirent {
}

static module dirent_old extends dirent {
	option number dir_quantity=4
	source "dirent.c"
	
	depends embox.fs.core
	depends embox.mem.objalloc
	depends embox.compat.libc.str
	depends embox.fs.syslib.dcache
	depends embox.compat.posix.fs.getcwd
	depends embox.fs.syslib.perm
}

@DefaultImpl(lseek_old)
abstract module lseek {
}

static module lseek_old extends lseek {
	source "lseek.c"

	depends embox.kernel.task.idesc
	depends embox.kernel.task.resource.errno
}

@DefaultImpl(file_ops_old)
abstract module file_ops {
}

static module file_ops_old extends file_ops {
	source "ioctl.c"
	source "close.c"
	source "fstat.c"
	source "fsync.c"
	source "read.c"
	source "write.c"
	source "ftruncate.c" 
	source "fcntl.c"
	
	depends embox.fs.index_operation
	depends embox.kernel.task.api
	depends embox.kernel.task.idesc
	depends embox.kernel.task.resource.errno
}

@DefaultImpl(fsop_old)
abstract module fsop {
}

static module fsop_old extends fsop {
	source "fsop.c"

	depends embox.kernel.task.resource.errno
	depends embox.fs.core
	depends embox.fs.syslib.perm
	depends embox.fs.syslib.file_system
	depends umask // mkdir
}

@DefaultImpl(getcwd_old)
abstract module getcwd {
}

static module getcwd_old extends getcwd {
	source "getcwd.c"

	depends embox.compat.posix.util.environ
	depends embox.compat.libc.str
}

@DefaultImpl(open_old)
abstract module open {
}

static module open_old extends open {
	source "open.c"

	depends embox.kernel.task.resource.errno
	depends embox.fs.core /* if_mounted_follow_down */
	depends libgen
	depends dirent
	depends umask
}

@DefaultImpl(umask_old)
abstract module umask {
}

static module umask_old extends umask {
	source "umask.c"

	option number default_umask = 0022
	depends embox.kernel.task.task_resource
}

@DefaultImpl(xattr_old)
abstract module xattr {
}

static module xattr_old extends xattr {
	source "xattr.c"

	depends embox.fs.xattr
	depends embox.fs.syslib.perm
	depends embox.security.api
}

@DefaultImpl(libgen_old)
abstract module libgen {
}

static module libgen_old extends libgen {
	source "libgen.c"
}

