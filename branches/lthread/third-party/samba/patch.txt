diff -aur samba-3.6.18/examples/libsmbclient/testbrowse2.c samba/examples/libsmbclient/testbrowse2.c
--- samba-3.6.18/examples/libsmbclient/testbrowse2.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/examples/libsmbclient/testbrowse2.c	2013-09-24 14:34:33.333921061 +0400
@@ -7,6 +7,7 @@
 #include <stdlib.h>
 #include <malloc.h>
 #include <string.h>
+#include <time.h>
 #include <libsmbclient.h>
 
 int	debuglevel	= 0;
@@ -48,7 +49,7 @@
 }
 
 smbitem* smbitem_list_sort(smbitem *list){
-    smbitem	*item, **array;
+    smbitem	**array;
     int		count, i;
 
     if ((count = smbitem_list_count(list)) == 0) return NULL;
@@ -88,7 +89,7 @@
     strncpy(passwd, password, passwdlen - 1); passwd[passwdlen - 1] = 0;
 }
 
-SMBCCTX* create_smbctx(){
+SMBCCTX* create_smbctx(void){
     SMBCCTX	*ctx;
 
     if ((ctx = smbc_new_context()) == NULL) return NULL;
@@ -193,10 +194,10 @@
     smb_path[len] = '\0';
 }
 
-int main(int argc, char *argv[]){
+int testbrowse2_main(int argc, char *argv[]){
     int		i;
     SMBCCTX	*ctx;
-    char	smb_path[32768] = "smb://";
+    char	smb_path[PATH_MAX] = "smb://";
 
     if ((ctx = create_smbctx()) == NULL){
 	perror("Cant create samba context.");
diff -aur samba-3.6.18/lib/util/become_daemon.c samba/lib/util/become_daemon.c
--- samba-3.6.18/lib/util/become_daemon.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/lib/util/become_daemon.c	2013-09-24 14:34:33.483921055 +0400
@@ -69,7 +69,7 @@
 _PUBLIC_ void become_daemon(bool do_fork, bool no_process_group, bool log_stdout)
 {
 	if (do_fork) {
-		if (sys_fork()) {
+		if (samba_sys_fork()) {
 			_exit(0);
 		}
 	}
@@ -79,7 +79,7 @@
 	if (!no_process_group) setsid();
 #elif defined(TIOCNOTTY)
 	if (!no_process_group) {
-		int i = sys_open("/dev/tty", O_RDWR, 0);
+		int i = samba_sys_open("/dev/tty", O_RDWR, 0);
 		if (i != -1) {
 			ioctl(i, (int) TIOCNOTTY, (char *)0);
 			close(i);
diff -aur samba-3.6.18/lib/util/system.c samba/lib/util/system.c
--- samba-3.6.18/lib/util/system.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/lib/util/system.c	2013-09-24 14:34:33.500587722 +0400
@@ -94,7 +94,7 @@
 
 static pid_t mypid = (pid_t)-1;
 
-_PUBLIC_ pid_t sys_fork(void)
+_PUBLIC_ pid_t samba_sys_fork(void)
 {
 	pid_t forkret = fork();
 
diff -aur samba-3.6.18/lib/util/util.h samba/lib/util/util.h
--- samba-3.6.18/lib/util/util.h	2013-08-12 11:25:27.000000000 +0400
+++ samba/lib/util/util.h	2013-09-24 14:34:33.483921055 +0400
@@ -126,7 +126,7 @@
 /**
  * Wrapper for fork used to invalid pid cache.
  **/
-_PUBLIC_ pid_t sys_fork(void);
+_PUBLIC_ pid_t samba_sys_fork(void);
 
 /**
  * Wrapper for getpid. Ensures we only do a system call *once*.
diff -aur samba-3.6.18/libgpo/gpext/gpext.c samba/libgpo/gpext/gpext.c
--- samba-3.6.18/libgpo/gpext/gpext.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/libgpo/gpext/gpext.c	2013-09-24 14:34:29.270587847 +0400
@@ -492,7 +492,7 @@
 	SMB_STRUCT_DIR *dir = NULL;
 	SMB_STRUCT_DIRENT *dirent = NULL;
 
-	dir = sys_opendir(modules_path(SAMBA_SUBSYSTEM_GPEXT));
+	dir = samba_sys_opendir(modules_path(SAMBA_SUBSYSTEM_GPEXT));
 	if (!dir) {
 		return map_nt_error_from_unix(errno);
 	}
diff -aur samba-3.6.18/source3/client/client.c samba/source3/client/client.c
--- samba-3.6.18/source3/client/client.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/client/client.c	2013-09-24 14:34:32.970587738 +0400
@@ -1096,7 +1096,7 @@
 		handle = fileno(stdout);
 	} else {
 		if (reget) {
-			handle = sys_open(lname, O_WRONLY|O_CREAT, 0644);
+			handle = samba_sys_open(lname, O_WRONLY|O_CREAT, 0644);
 			if (handle >= 0) {
 				start = sys_lseek(handle, 0, SEEK_END);
 				if (start == -1) {
@@ -1105,7 +1105,7 @@
 				}
 			}
 		} else {
-			handle = sys_open(lname, O_WRONLY|O_CREAT|O_TRUNC, 0644);
+			handle = samba_sys_open(lname, O_WRONLY|O_CREAT|O_TRUNC, 0644);
 		}
 		newhandle = true;
 	}
@@ -2056,7 +2056,7 @@
 	bool isdir;
 	const char *dname;
 
-        dir = sys_opendir(directory);
+        dir = samba_sys_opendir(directory);
 	if (!dir)
 		return -1;
 
@@ -5101,7 +5101,7 @@
   main program
 ****************************************************************************/
 
- int main(int argc,char *argv[])
+ int smbclient_main(int argc,char *argv[])
 {
 	char *base_directory = NULL;
 	int opt;
diff -aur samba-3.6.18/source3/client/clitar.c samba/source3/client/clitar.c
--- samba-3.6.18/source3/client/clitar.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/client/clitar.c	2013-09-24 14:34:32.960587738 +0400
@@ -345,13 +345,13 @@
 
 		diff=tbufsiz-tp;
 		memcpy(tarbuf + tp, b, diff);
-		fail=fail && (1+sys_write(f, tarbuf, tbufsiz));
+		fail=fail && (1+samba_sys_write(f, tarbuf, tbufsiz));
 		n-=diff;
 		b+=diff;
 		tp=0;
 
 		while (n >= tbufsiz) {
-			fail=fail && (1 + sys_write(f, b, tbufsiz));
+			fail=fail && (1 + samba_sys_write(f, b, tbufsiz));
 			n-=tbufsiz;
 			b+=tbufsiz;
 		}
@@ -380,8 +380,8 @@
 
 	if (n+tp >= tbufsiz) {
 		memset(tarbuf+tp, 0, tbufsiz-tp);
-		if (sys_write(f, tarbuf, tbufsiz) != tbufsiz) {
-			DEBUG(0, ("dozerobuf: sys_write fail\n"));
+		if (samba_sys_write(f, tarbuf, tbufsiz) != tbufsiz) {
+			DEBUG(0, ("dozerobuf: samba_sys_write fail\n"));
 			return;
 		}
 		memset(tarbuf, 0, (tp+=n-tbufsiz));
@@ -429,8 +429,8 @@
 		* and we should write out at full size */
 	if (tp > 0) {
 		size_t towrite = S_ISREG(stbuf.st_ex_mode) ? tp : tbufsiz;
-		if (sys_write(f, tarbuf, towrite) != towrite) {
-			DEBUG(0,("dotareof: sys_write fail\n"));
+		if (samba_sys_write(f, tarbuf, towrite) != towrite) {
+			DEBUG(0,("dotareof: samba_sys_write fail\n"));
 		}
 	}
 }
@@ -1991,7 +1991,7 @@
 	} else {
 		if (tar_type=='c' && dry_run) {
 			tarhandle=-1;
-		} else if ((tar_type=='x' && (tarhandle = sys_open(argv[Optind], O_RDONLY, 0)) == -1)
+		} else if ((tar_type=='x' && (tarhandle = samba_sys_open(argv[Optind], O_RDONLY, 0)) == -1)
 					|| (tar_type=='c' && (tarhandle=sys_creat(argv[Optind], 0644)) < 0)) {
 			DEBUG(0,("Error opening local file %s - %s\n", argv[Optind], strerror(errno)));
 			return(0);
diff -aur samba-3.6.18/source3/configure samba/source3/configure
--- samba-3.6.18/source3/configure	2013-08-12 11:26:02.000000000 +0400
+++ samba/source3/configure	2013-09-24 14:25:38.960603478 +0400
@@ -8127,10 +8127,10 @@
 else
 
     if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
+#  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+#$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+#as_fn_error $? "cannot run test program while cross compiling
+#See \`config.log' for more details" "$LINENO" 5; }
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -11957,7 +11957,7 @@
 _ACEOF
 
 else
-  as_fn_error $? "Required function not found" "$LINENO" 5
+echo #  as_fn_error $? "Required function not found" "$LINENO" 5
 fi
 done
 
@@ -18954,17 +18954,17 @@
 #define HAVE_EXTATTR_DELETE_FILE 1
 _ACEOF
 
-		for ac_func in extattr_delete_fd extattr_delete_link extattr_get_fd extattr_get_file extattr_get_link extattr_list_fd extattr_list_file extattr_list_link extattr_set_fd extattr_set_file extattr_set_link
-do :
-  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
-ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
-if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
-  cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
-_ACEOF
-
-fi
-done
+#		for ac_func in extattr_delete_fd extattr_delete_link extattr_get_fd extattr_get_file extattr_get_link extattr_list_fd extattr_list_file extattr_list_link extattr_set_fd extattr_set_file extattr_set_link
+#do :
+#  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+#ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+#if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+#  cat >>confdefs.h <<_ACEOF
+##define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+#_ACEOF
+#
+#fi
+#done
 
 
 fi
@@ -20784,17 +20784,17 @@
 TDB_CFLAGS="-I$tdbdir/include"
 
 
-for ac_func in mmap pread pwrite getpagesize utime
-do :
-  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
-ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
-if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
-  cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
-_ACEOF
-
-fi
-done
+#for ac_func in mmap pread pwrite getpagesize utime
+#do :
+#  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+#ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+#if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+#  cat >>confdefs.h <<_ACEOF
+##define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+#_ACEOF
+#
+#fi
+#done
 
 for ac_header in getopt.h sys/select.h sys/time.h
 do :
diff -aur samba-3.6.18/source3/include/proto.h samba/source3/include/proto.h
--- samba-3.6.18/source3/include/proto.h	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/include/proto.h	2013-09-24 14:34:32.137254429 +0400
@@ -434,8 +434,8 @@
 void *sys_memalign( size_t align, size_t size );
 int sys_usleep(long usecs);
 ssize_t sys_read(int fd, void *buf, size_t count);
-ssize_t sys_write(int fd, const void *buf, size_t count);
-ssize_t sys_writev(int fd, const struct iovec *iov, int iovcnt);
+ssize_t samba_sys_write(int fd, const void *buf, size_t count);
+ssize_t samba_sys_writev(int fd, const struct iovec *iov, int iovcnt);
 ssize_t sys_pread(int fd, void *buf, size_t count, SMB_OFF_T off);
 ssize_t sys_pwrite(int fd, const void *buf, size_t count, SMB_OFF_T off);
 ssize_t sys_send(int s, const void *msg, size_t len, int flags);
@@ -459,10 +459,10 @@
 int sys_fseek(FILE *fp, SMB_OFF_T offset, int whence);
 SMB_OFF_T sys_ftell(FILE *fp);
 int sys_creat(const char *path, mode_t mode);
-int sys_open(const char *path, int oflag, mode_t mode);
+int samba_sys_open(const char *path, int oflag, mode_t mode);
 FILE *sys_fopen(const char *path, const char *type);
 void kernel_flock(int fd, uint32 share_mode, uint32 access_mask);
-SMB_STRUCT_DIR *sys_opendir(const char *name);
+SMB_STRUCT_DIR *samba_sys_opendir(const char *name);
 SMB_STRUCT_DIR *sys_fdopendir(int fd);
 SMB_STRUCT_DIRENT *sys_readdir(SMB_STRUCT_DIR *dirp);
 void sys_seekdir(SMB_STRUCT_DIR *dirp, long offset);
diff -aur samba-3.6.18/source3/lib/pidfile.c samba/source3/lib/pidfile.c
--- samba-3.6.18/source3/lib/pidfile.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/pidfile.c	2013-09-24 14:34:33.110587733 +0400
@@ -66,7 +66,7 @@
 
 	SAFE_FREE(name);
 
-	fd = sys_open(pidFile, O_NONBLOCK | O_RDONLY, 0644);
+	fd = samba_sys_open(pidFile, O_NONBLOCK | O_RDONLY, 0644);
 	if (fd == -1) {
 		SAFE_FREE(pidFile);
 		return 0;
@@ -147,7 +147,7 @@
 		exit(1);
 	}
 
-	fd = sys_open(pidFile_name, O_NONBLOCK | O_CREAT | O_WRONLY | O_EXCL,
+	fd = samba_sys_open(pidFile_name, O_NONBLOCK | O_CREAT | O_WRONLY | O_EXCL,
 		      0644);
 	if (fd == -1) {
 		DEBUG(0,("ERROR: can't open %s: Error was %s\n", pidFile_name,
diff -aur samba-3.6.18/source3/lib/popt_common.c samba/source3/lib/popt_common.c
--- samba-3.6.18/source3/lib/popt_common.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/popt_common.c	2013-09-24 14:34:33.130587734 +0400
@@ -375,7 +375,7 @@
 		sscanf(p, "%d", &fd);
 		close_it = false;
 	} else if ((p = getenv("PASSWD_FILE")) != NULL) {
-		fd = sys_open(p, O_RDONLY, 0);
+		fd = samba_sys_open(p, O_RDONLY, 0);
 		spec = SMB_STRDUP(p);
 		if (fd < 0) {
 			fprintf(stderr, "Error opening PASSWD_FILE %s: %s\n",
diff -aur samba-3.6.18/source3/lib/recvfile.c samba/source3/lib/recvfile.c
--- samba-3.6.18/source3/lib/recvfile.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/recvfile.c	2013-09-24 14:34:33.123921066 +0400
@@ -95,7 +95,7 @@
 			ssize_t write_ret;
 
 			/* Write to file - ignore EINTR. */
-			write_ret = sys_write(tofd,
+			write_ret = samba_sys_write(tofd,
 					buffer + num_written,
 					read_ret - num_written);
 
diff -aur samba-3.6.18/source3/lib/smbrun.c samba/source3/lib/smbrun.c
--- samba-3.6.18/source3/lib/smbrun.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/smbrun.c	2013-09-24 14:34:33.120587734 +0400
@@ -92,7 +92,7 @@
 
 	CatchChildLeaveStatus();
                                    	
-	if ((pid=sys_fork()) < 0) {
+	if ((pid=samba_sys_fork()) < 0) {
 		DEBUG(0,("smbrun: fork failed with error %s\n", strerror(errno) ));
 		CatchChild(); 
 		if (outfd) {
@@ -255,7 +255,7 @@
 
 	CatchChildLeaveStatus();
                                    	
-	if ((pid=sys_fork()) < 0) {
+	if ((pid=samba_sys_fork()) < 0) {
 		DEBUG(0, ("smbrunsecret: fork failed with error %s\n", strerror(errno)));
 		CatchChild(); 
 		return errno;
diff -aur samba-3.6.18/source3/lib/system.c samba/source3/lib/system.c
--- samba-3.6.18/source3/lib/system.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/system.c	2013-09-24 14:34:33.180587732 +0400
@@ -139,7 +139,7 @@
 A write wrapper that will deal with EINTR.
 ********************************************************************/
 
-ssize_t sys_write(int fd, const void *buf, size_t count)
+ssize_t samba_sys_write(int fd, const void *buf, size_t count)
 {
 	ssize_t ret;
 
@@ -157,17 +157,17 @@
 A writev wrapper that will deal with EINTR.
 ********************************************************************/
 
-ssize_t sys_writev(int fd, const struct iovec *iov, int iovcnt)
+ssize_t samba_sys_writev(int fd, const struct iovec *iov, int iovcnt)
 {
 	ssize_t ret;
 
 #if 0
 	/* Try to confuse write_data_iov a bit */
 	if ((random() % 5) == 0) {
-		return sys_write(fd, iov[0].iov_base, iov[0].iov_len);
+		return samba_sys_write(fd, iov[0].iov_base, iov[0].iov_len);
 	}
 	if (iov[0].iov_len > 1) {
-		return sys_write(fd, iov[0].iov_base,
+		return samba_sys_write(fd, iov[0].iov_base,
 				 (random() % (iov[0].iov_len-1)) + 1);
 	}
 #endif
@@ -804,7 +804,7 @@
 	 * If creat64 isn't defined then ensure we call a potential open64.
 	 * JRA.
 	 */
-	return sys_open(path, O_WRONLY | O_CREAT | O_TRUNC, mode);
+	return samba_sys_open(path, O_WRONLY | O_CREAT | O_TRUNC, mode);
 #endif
 }
 
@@ -812,7 +812,7 @@
  An open() wrapper that will deal with 64 bit filesizes.
 ********************************************************************/
 
-int sys_open(const char *path, int oflag, mode_t mode)
+int samba_sys_open(const char *path, int oflag, mode_t mode)
 {
 #if defined(HAVE_EXPLICIT_LARGEFILE_SUPPORT) && defined(HAVE_OPEN64)
 	return open64(path, oflag, mode);
@@ -872,7 +872,7 @@
  An opendir wrapper that will deal with 64 bit filesizes.
 ********************************************************************/
 
-SMB_STRUCT_DIR *sys_opendir(const char *name)
+SMB_STRUCT_DIR *samba_sys_opendir(const char *name)
 {
 #if defined(HAVE_EXPLICIT_LARGEFILE_SUPPORT) && defined(HAVE_OPENDIR64)
 	return opendir64(name);
@@ -1474,7 +1474,7 @@
 	if(!(argl = extract_args(NULL, command)))
 		goto err_exit;
 
-	entry->child_pid = sys_fork();
+	entry->child_pid = samba_sys_fork();
 
 	if (entry->child_pid == -1) {
 		goto err_exit;
diff -aur samba-3.6.18/source3/lib/tdb_validate.c samba/source3/lib/tdb_validate.c
--- samba-3.6.18/source3/lib/tdb_validate.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/tdb_validate.c	2013-09-24 14:34:33.133921067 +0400
@@ -116,7 +116,7 @@
 	 * just let the child panic. we catch the signal. */
 
 	DEBUG(10, ("tdb_validate: forking to let child do validation.\n"));
-	child_pid = sys_fork();
+	child_pid = samba_sys_fork();
 	if (child_pid == 0) {
 		/* child code */
 		DEBUG(10, ("tdb_validate (validation child): created\n"));
diff -aur samba-3.6.18/source3/lib/util_sock.c samba/source3/lib/util_sock.c
--- samba-3.6.18/source3/lib/util_sock.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/util_sock.c	2013-09-24 14:34:33.170587733 +0400
@@ -407,7 +407,7 @@
 		to_send += orig_iov[i].iov_len;
 	}
 
-	thistime = sys_writev(fd, orig_iov, iovcnt);
+	thistime = samba_sys_writev(fd, orig_iov, iovcnt);
 	if ((thistime <= 0) || (thistime == to_send)) {
 		return thistime;
 	}
@@ -448,7 +448,7 @@
 			iovcnt -= 1;
 		}
 
-		thistime = sys_writev(fd, iov, iovcnt);
+		thistime = samba_sys_writev(fd, iov, iovcnt);
 		if (thistime <= 0) {
 			break;
 		}
diff -aur samba-3.6.18/source3/lib/util_transfer_file.c samba/source3/lib/util_transfer_file.c
--- samba-3.6.18/source3/lib/util_transfer_file.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/lib/util_transfer_file.c	2013-09-24 14:34:33.133921067 +0400
@@ -97,15 +97,15 @@
 	return sys_read(*fd, buf, len);
 }
 
-static ssize_t sys_write_fn(void *file, const void *buf, size_t len)
+static ssize_t samba_sys_write_fn(void *file, const void *buf, size_t len)
 {
 	int *fd = (int *)file;
 
-	return sys_write(*fd, buf, len);
+	return samba_sys_write(*fd, buf, len);
 }
 
 SMB_OFF_T transfer_file(int infd, int outfd, SMB_OFF_T n)
 {
 	return (SMB_OFF_T)transfer_file_internal(&infd, &outfd, (size_t)n,
-						 sys_read_fn, sys_write_fn);
+						 sys_read_fn, samba_sys_write_fn);
 }
diff -aur samba-3.6.18/source3/libgpo/gpo_filesync.c samba/source3/libgpo/gpo_filesync.c
--- samba-3.6.18/source3/libgpo/gpo_filesync.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/libgpo/gpo_filesync.c	2013-09-24 14:34:32.357254422 +0400
@@ -55,7 +55,7 @@
 		goto out;
 	}
 
-	if ((fd = sys_open(unix_path, O_WRONLY|O_CREAT|O_TRUNC, 0644)) == -1) {
+	if ((fd = samba_sys_open(unix_path, O_WRONLY|O_CREAT|O_TRUNC, 0644)) == -1) {
 		result = map_nt_error_from_unix(errno);
 		goto out;
 	}
diff -aur samba-3.6.18/source3/libsmb/unexpected.c samba/source3/libsmb/unexpected.c
--- samba-3.6.18/source3/libsmb/unexpected.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/libsmb/unexpected.c	2013-09-24 14:34:32.543921084 +0400
@@ -256,7 +256,7 @@
 	 * unlikely that this actually blocks.
 	 */
 	c = 0;
-	nwritten = sys_write(client->sock, &c, sizeof(c));
+	nwritten = samba_sys_write(client->sock, &c, sizeof(c));
 	if (nwritten != sizeof(c)) {
 		DEBUG(10, ("Could not write success indicator to client: %s\n",
 			   strerror(errno)));
diff -aur samba-3.6.18/source3/Makefile.in samba/source3/Makefile.in
--- samba-3.6.18/source3/Makefile.in	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/Makefile.in	2013-09-24 14:25:38.960603478 +0400
@@ -218,7 +218,7 @@
 
 SBIN_PROGS = bin/smbd@EXEEXT@ bin/nmbd@EXEEXT@ @SWAT_SBIN_TARGETS@ @EXTRA_SBIN_PROGS@
 
-BIN_PROGS1 = bin/smbclient@EXEEXT@ bin/net@EXEEXT@ bin/smbspool@EXEEXT@ \
+BIN_PROGS1 = bin/smbclient$(EXEEXT) bin/net@EXEEXT@ bin/smbspool@EXEEXT@ \
 	bin/testparm@EXEEXT@ bin/smbstatus@EXEEXT@ bin/smbget@EXEEXT@ \
 	bin/smbta-util@EXEEXT@
 BIN_PROGS2 = bin/smbcontrol@EXEEXT@ bin/smbtree@EXEEXT@ $(TDBBACKUP) \
@@ -1805,7 +1805,7 @@
 		$(KRB5LIBS) $(LDAP_LIBS) $(LIBTALLOC_LIBS) $(LIBTEVENT_LIBS) $(LIBTDB_LIBS) \
 		$(LIBWBCLIENT_LIBS) $(ZLIB_LIBS) $(PASSDB_LIBS)
 
-bin/smbclient@EXEEXT@: $(BINARY_PREREQS) $(CLIENT_OBJ) @BUILD_POPT@ $(LIBTALLOC) $(LIBTEVENT) $(LIBTDB) $(LIBWBCLIENT)
+bin/smbclient$(EXEEXT): $(BINARY_PREREQS) $(CLIENT_OBJ) @BUILD_POPT@ $(LIBTALLOC) $(LIBTEVENT) $(LIBTDB) $(LIBWBCLIENT)
 	@echo Linking $@
 	@$(CC) -o $@ $(CLIENT_OBJ) $(LDFLAGS) $(DYNEXP) \
 		$(TERMLDFLAGS) $(TERMLIBS) $(LIBS) $(POPT_LIBS) \
diff -aur samba-3.6.18/source3/modules/vfs_aio_fork.c samba/source3/modules/vfs_aio_fork.c
--- samba-3.6.18/source3/modules/vfs_aio_fork.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_aio_fork.c	2013-09-24 14:34:32.290587757 +0400
@@ -506,7 +506,7 @@
 		goto fail;
 	}
 
-	result->pid = sys_fork();
+	result->pid = samba_sys_fork();
 	if (result->pid == -1) {
 		status = map_nt_error_from_unix(errno);
 		DEBUG(0, ("fork failed: %s\n", strerror(errno)));
diff -aur samba-3.6.18/source3/modules/vfs_aio_pthread.c samba/source3/modules/vfs_aio_pthread.c
--- samba-3.6.18/source3/modules/vfs_aio_pthread.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_aio_pthread.c	2013-09-24 14:34:32.303921090 +0400
@@ -128,7 +128,7 @@
 		if (pd->ret_size == -1 && errno == ESPIPE) {
 			/* Maintain the fiction that pipes can
 			   be seeked (sought?) on. */
-			pd->ret_size = sys_write(pd->aiocb->aio_fildes,
+			pd->ret_size = samba_sys_write(pd->aiocb->aio_fildes,
 					(const void *)pd->aiocb->aio_buf,
 					pd->aiocb->aio_nbytes);
 		}
diff -aur samba-3.6.18/source3/modules/vfs_crossrename.c samba/source3/modules/vfs_crossrename.c
--- samba-3.6.18/source3/modules/vfs_crossrename.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_crossrename.c	2013-09-24 14:34:32.330587756 +0400
@@ -70,16 +70,16 @@
 		return -1;
 	}
 
-	if((ifd = sys_open (source, O_RDONLY, 0)) < 0)
+	if((ifd = samba_sys_open (source, O_RDONLY, 0)) < 0)
 		return -1;
 
 	if (unlink (dest) && errno != ENOENT)
 		return -1;
 
 #ifdef O_NOFOLLOW
-	if((ofd = sys_open (dest, O_WRONLY | O_CREAT | O_TRUNC | O_NOFOLLOW, 0600)) < 0 )
+	if((ofd = samba_sys_open (dest, O_WRONLY | O_CREAT | O_TRUNC | O_NOFOLLOW, 0600)) < 0 )
 #else
-	if((ofd = sys_open (dest, O_WRONLY | O_CREAT | O_TRUNC , 0600)) < 0 )
+	if((ofd = samba_sys_open (dest, O_WRONLY | O_CREAT | O_TRUNC , 0600)) < 0 )
 #endif
 		goto err;
 
diff -aur samba-3.6.18/source3/modules/vfs_default.c samba/source3/modules/vfs_default.c
--- samba-3.6.18/source3/modules/vfs_default.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_default.c	2013-09-24 14:34:32.297254425 +0400
@@ -170,7 +170,7 @@
 	SMB_STRUCT_DIR *result;
 
 	START_PROFILE(syscall_opendir);
-	result = sys_opendir(fname);
+	result = samba_sys_opendir(fname);
 	END_PROFILE(syscall_opendir);
 	return result;
 }
@@ -303,7 +303,7 @@
 		goto out;
 	}
 
-	result = sys_open(smb_fname->base_name, flags, mode);
+	result = samba_sys_open(smb_fname->base_name, flags, mode);
  out:
 	END_PROFILE(syscall_open);
 	return result;
@@ -404,7 +404,7 @@
 	ssize_t result;
 
 	START_PROFILE_BYTES(syscall_write, n);
-	result = sys_write(fsp->fh->fd, data, n);
+	result = samba_sys_write(fsp->fh->fd, data, n);
 	END_PROFILE(syscall_write);
 	return result;
 }
diff -aur samba-3.6.18/source3/modules/vfs_netatalk.c samba/source3/modules/vfs_netatalk.c
--- samba-3.6.18/source3/modules/vfs_netatalk.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_netatalk.c	2013-09-24 14:34:32.343921089 +0400
@@ -159,7 +159,7 @@
 
 	if (!path) return;
 
-	dir = sys_opendir(path);
+	dir = samba_sys_opendir(path);
 	if (!dir) return;
 
 	while (NULL != (dent = sys_readdir(dir))) {
diff -aur samba-3.6.18/source3/modules/vfs_preopen.c samba/source3/modules/vfs_preopen.c
--- samba-3.6.18/source3/modules/vfs_preopen.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/modules/vfs_preopen.c	2013-09-24 14:34:32.283921092 +0400
@@ -224,7 +224,7 @@
 		return status;
 	}
 
-	h->pid = sys_fork();
+	h->pid = samba_sys_fork();
 
 	if (h->pid == -1) {
 		return map_nt_error_from_unix(errno);
diff -aur samba-3.6.18/source3/nmbd/asyncdns.c samba/source3/nmbd/asyncdns.c
--- samba-3.6.18/source3/nmbd/asyncdns.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/nmbd/asyncdns.c	2013-09-24 14:34:32.787254410 +0400
@@ -147,7 +147,7 @@
 		return;
 	}
 
-	child_pid = sys_fork();
+	child_pid = samba_sys_fork();
 
 	if (child_pid) {
 		fd_in = fd1[0];
diff -aur samba-3.6.18/source3/nmbd/nmbd_synclists.c samba/source3/nmbd/nmbd_synclists.c
--- samba-3.6.18/source3/nmbd/nmbd_synclists.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/nmbd/nmbd_synclists.c	2013-09-24 14:34:32.803921076 +0400
@@ -182,7 +182,7 @@
 	/* the parent forks and returns, leaving the child to do the
 	   actual sync and call END_PROFILE*/
 	CatchChild();
-	if ((s->pid = sys_fork())) return;
+	if ((s->pid = samba_sys_fork())) return;
 
 	BlockSignals( False, SIGTERM );
 
diff -aur samba-3.6.18/source3/nmbd/nmbd_winsserver.c samba/source3/nmbd/nmbd_winsserver.c
--- samba-3.6.18/source3/nmbd/nmbd_winsserver.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/nmbd/nmbd_winsserver.c	2013-09-24 14:34:32.810587743 +0400
@@ -2470,7 +2470,7 @@
 	/* We will do the writing in a child process to ensure that the parent doesn't block while this is done */
 	if (background) {
 		CatchChild();
-		if (sys_fork()) {
+		if (samba_sys_fork()) {
 			return;
 		}
 		if (tdb_reopen(wins_tdb)) {
diff -aur samba-3.6.18/source3/param/loadparm.c samba/source3/param/loadparm.c
--- samba-3.6.18/source3/param/loadparm.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/param/loadparm.c	2013-09-24 14:34:32.833921076 +0400
@@ -9018,7 +9018,7 @@
         }
 
 	/* Ensure this is pointing to a directory. */
-	dp = sys_opendir(sharepath);
+	dp = samba_sys_opendir(sharepath);
 
 	if (!dp) {
 		DEBUG(2,("parse_usershare_file: share %s path %s is not a directory.\n",
@@ -9145,9 +9145,9 @@
 
 	/* Try and open the file read only - no symlinks allowed. */
 #ifdef O_NOFOLLOW
-	fd = sys_open(fname, O_RDONLY|O_NOFOLLOW, 0);
+	fd = samba_sys_open(fname, O_RDONLY|O_NOFOLLOW, 0);
 #else
-	fd = sys_open(fname, O_RDONLY, 0);
+	fd = samba_sys_open(fname, O_RDONLY, 0);
 #endif
 
 	if (fd == -1) {
@@ -9422,7 +9422,7 @@
 		}
 	}
 
-	dp = sys_opendir(usersharepath);
+	dp = samba_sys_opendir(usersharepath);
 	if (!dp) {
 		DEBUG(0,("load_usershare_shares:: failed to open directory %s. %s\n",
 			usersharepath, strerror(errno) ));
@@ -9928,7 +9928,7 @@
  A useful volume label function. 
 ********************************************************************/
 
-const char *volume_label(int snum)
+const char *samba_volume_label(int snum)
 {
 	char *ret;
 	const char *label = lp_volume(snum);
diff -aur samba-3.6.18/source3/passdb/pdb_smbpasswd.c samba/source3/passdb/pdb_smbpasswd.c
--- samba-3.6.18/source3/passdb/pdb_smbpasswd.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/passdb/pdb_smbpasswd.c	2013-09-24 14:34:32.253921092 +0400
@@ -213,7 +213,7 @@
 				int i, fd = -1;
 
 				for(i = 0; i < 5; i++) {
-					if((fd = sys_open(pfile, O_CREAT|O_TRUNC|O_EXCL|O_RDWR, 0600))!=-1) {
+					if((fd = samba_sys_open(pfile, O_CREAT|O_TRUNC|O_EXCL|O_RDWR, 0600))!=-1) {
 						break;
 					}
 					sys_usleep(200); /* Spin, spin... */
diff -aur samba-3.6.18/source3/printing/print_cups.c samba/source3/printing/print_cups.c
--- samba-3.6.18/source3/printing/print_cups.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/printing/print_cups.c	2013-09-24 14:34:30.630587807 +0400
@@ -158,12 +158,12 @@
 {
 	size_t ret;
 
-	ret = sys_write(fd, &pcap_blob->length, sizeof(pcap_blob->length));
+	ret = samba_sys_write(fd, &pcap_blob->length, sizeof(pcap_blob->length));
 	if (ret != sizeof(pcap_blob->length)) {
 		return false;
 	}
 
-	ret = sys_write(fd, pcap_blob->data, pcap_blob->length);
+	ret = samba_sys_write(fd, pcap_blob->data, pcap_blob->length);
 	if (ret != pcap_blob->length) {
 		return false;
 	}
@@ -452,7 +452,7 @@
 		return false;
 	}
 
-	pid = sys_fork();
+	pid = samba_sys_fork();
 	if (pid == (pid_t)-1) {
 		DEBUG(10,("cups_pcap_load_async: fork failed %s\n",
 			strerror(errno) ));
diff -aur samba-3.6.18/source3/printing/printing.c samba/source3/printing/printing.c
--- samba-3.6.18/source3/printing/printing.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/printing/printing.c	2013-09-24 14:34:30.627254473 +0400
@@ -1754,7 +1754,7 @@
 		exit(1);
 	}
 
-	background_lpq_updater_pid = sys_fork();
+	background_lpq_updater_pid = samba_sys_fork();
 
 	if (background_lpq_updater_pid == -1) {
 		DEBUG(5,("start_background_queue: background LPQ thread failed to start. %s\n", strerror(errno) ));
diff -aur samba-3.6.18/source3/printing/spoolssd.c samba/source3/printing/spoolssd.c
--- samba-3.6.18/source3/printing/spoolssd.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/printing/spoolssd.c	2013-09-24 14:34:30.620587807 +0400
@@ -167,7 +167,7 @@
 
 	DEBUG(1, ("Forking SPOOLSS Daemon\n"));
 
-	pid = sys_fork();
+	pid = samba_sys_fork();
 
 	if (pid == -1) {
 		DEBUG(0, ("Failed to fork SPOOLSS [%s], aborting ...\n",
diff -aur samba-3.6.18/source3/rpc_server/epmd.c samba/source3/rpc_server/epmd.c
--- samba-3.6.18/source3/rpc_server/epmd.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/rpc_server/epmd.c	2013-09-24 14:34:32.837254408 +0400
@@ -211,7 +211,7 @@
 
 	DEBUG(1, ("Forking Endpoint Mapper Daemon\n"));
 
-	pid = sys_fork();
+	pid = samba_sys_fork();
 
 	if (pid == -1) {
 		DEBUG(0, ("Failed to fork Endpoint Mapper [%s], aborting ...\n",
diff -aur samba-3.6.18/source3/rpc_server/samr/srv_samr_chgpasswd.c samba/source3/rpc_server/samr/srv_samr_chgpasswd.c
--- samba-3.6.18/source3/rpc_server/samr/srv_samr_chgpasswd.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/rpc_server/samr/srv_samr_chgpasswd.c	2013-09-24 14:34:32.907254406 +0400
@@ -77,7 +77,7 @@
 	master = posix_openpt(O_RDWR|O_NOCTTY);
 #else
 	/* Try to open /dev/ptmx. If that fails, fall through to old method. */
-	master = sys_open("/dev/ptmx", O_RDWR, 0);
+	master = samba_sys_open("/dev/ptmx", O_RDWR, 0);
 #endif
 	if (master >= 0) {
 		grantpt(master);
@@ -106,7 +106,7 @@
 		return (-1);
 	}
 
-	dirp = sys_opendir("/dev");
+	dirp = samba_sys_opendir("/dev");
 	if (!dirp) {
 		SAFE_FREE(line);
 		return (-1);
@@ -119,7 +119,7 @@
 			       line));
 			line[8] = dpname[3];
 			line[9] = dpname[4];
-			if ((master = sys_open(line, O_RDWR, 0)) >= 0) {
+			if ((master = samba_sys_open(line, O_RDWR, 0)) >= 0) {
 				DEBUG(3, ("pty: opened %s\n", line));
 				line[5] = 't';
 				*slave = line;
@@ -163,7 +163,7 @@
 	}
 
 	/* Open slave pty and acquire as new controlling terminal. */
-	if ((slave = sys_open(slavedev, O_RDWR, 0)) < 0)
+	if ((slave = samba_sys_open(slavedev, O_RDWR, 0)) < 0)
 	{
 		DEBUG(3, ("More weirdness, could not open %s\n", slavedev));
 		return (False);
@@ -263,7 +263,7 @@
 			if (lp_passwd_chat_debug())
 				DEBUG(100, ("expect: sending [%s]\n", issue));
 
-			if ((len = sys_write(master, issue, strlen(issue))) != strlen(issue)) {
+			if ((len = samba_sys_write(master, issue, strlen(issue))) != strlen(issue)) {
 				DEBUG(2,("expect: (short) write returned %d\n",
 					 (int)len ));
 				return False;
@@ -410,7 +410,7 @@
 
 	CatchChildLeaveStatus();
 
-	if ((pid = sys_fork()) < 0) {
+	if ((pid = samba_sys_fork()) < 0) {
 		DEBUG(3, ("chat_with_program: Cannot fork() child for password change: %s\n", pass->pw_name));
 		SAFE_FREE(slavedev);
 		close(master);
diff -aur samba-3.6.18/source3/smbd/oplock_irix.c samba/source3/smbd/oplock_irix.c
--- samba-3.6.18/source3/smbd/oplock_irix.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/smbd/oplock_irix.c	2013-09-24 14:34:32.530587751 +0400
@@ -63,7 +63,7 @@
 		return False;
 	}
 
-	if((fd = sys_open(tmpname, O_RDWR|O_CREAT|O_EXCL|O_TRUNC, 0600)) < 0) {
+	if((fd = samba_sys_open(tmpname, O_RDWR|O_CREAT|O_EXCL|O_TRUNC, 0600)) < 0) {
 		DEBUG(0,("check_kernel_oplocks: Unable to open temp test file "
 			 "%s. Error was %s\n",
 			 tmpname, strerror(errno) ));
diff -aur samba-3.6.18/source3/smbd/process.c samba/source3/smbd/process.c
--- samba-3.6.18/source3/smbd/process.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/smbd/process.c	2013-09-24 14:34:32.397254421 +0400
@@ -2772,7 +2772,7 @@
 		goto fail;
 	}
 
-	child = sys_fork();
+	child = samba_sys_fork();
 	if (child == 0) {
 		NTSTATUS status;
 
diff -aur samba-3.6.18/source3/smbd/quotas.c samba/source3/smbd/quotas.c
--- samba-3.6.18/source3/smbd/quotas.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/smbd/quotas.c	2013-09-24 14:34:32.387254422 +0400
@@ -873,7 +873,7 @@
 	}
 
 	DEBUG(5,("disk_quotas: looking for quotas file \"%s\"\n", name));
-	if((file=sys_open(name, O_RDONLY,0))<0) {
+	if((file=samba_sys_open(name, O_RDONLY,0))<0) {
 		unbecome_root();
 		return false;
 	}
@@ -1582,7 +1582,7 @@
   set_effective_uid(0);
 
   DEBUG(5,("disk_quotas: looking for VxFS quotas file \"%s\"\n", qfname));
-  if((file=sys_open(qfname, O_RDONLY,0))<0) {
+  if((file=samba_sys_open(qfname, O_RDONLY,0))<0) {
     set_effective_uid(euser_id);
     return(False);
   }
diff -aur samba-3.6.18/source3/smbd/server.c samba/source3/smbd/server.c
--- samba-3.6.18/source3/smbd/server.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/smbd/server.c	2013-09-24 14:34:32.433921086 +0400
@@ -500,7 +500,7 @@
 	 */
 	unique_id = serverid_get_random_unique_id();
 
-	pid = sys_fork();
+	pid = samba_sys_fork();
 	if (pid == 0) {
 		NTSTATUS status = NT_STATUS_OK;
 
@@ -566,7 +566,7 @@
 	}
 
 	if (pid < 0) {
-		DEBUG(0,("smbd_accept_connection: sys_fork() failed: %s\n",
+		DEBUG(0,("smbd_accept_connection: samba_sys_fork() failed: %s\n",
 			 strerror(errno)));
 	}
 
diff -aur samba-3.6.18/source3/utils/net_usershare.c samba/source3/utils/net_usershare.c
--- samba-3.6.18/source3/utils/net_usershare.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/utils/net_usershare.c	2013-09-24 14:34:32.650587748 +0400
@@ -217,7 +217,7 @@
 	if (!basepath) {
 		return -1;
 	}
-	dp = sys_opendir(basepath);
+	dp = samba_sys_opendir(basepath);
 	if (!dp) {
 		d_fprintf(stderr,
 			_("get_share_list: cannot open usershare directory %s. "
@@ -359,9 +359,9 @@
 	}
 
 #ifdef O_NOFOLLOW
-	fd = sys_open(basepath, O_RDONLY|O_NOFOLLOW, 0);
+	fd = samba_sys_open(basepath, O_RDONLY|O_NOFOLLOW, 0);
 #else
-	fd = sys_open(basepath, O_RDONLY, 0);
+	fd = samba_sys_open(basepath, O_RDONLY, 0);
 #endif
 
 	if (fd == -1) {
@@ -556,7 +556,7 @@
 		return -1;
 	}
 
-	dp = sys_opendir(basepath);
+	dp = samba_sys_opendir(basepath);
 	if (!dp) {
 		d_fprintf(stderr,
 			_("count_num_usershares: cannot open usershare "
@@ -1104,7 +1104,7 @@
 		return -1;
 	}
 
-	dp = sys_opendir(lp_usershare_path());
+	dp = samba_sys_opendir(lp_usershare_path());
 	if (!dp) {
 		int err = errno;
 		d_fprintf(stderr,
diff -aur samba-3.6.18/source3/web/neg_lang.c samba/source3/web/neg_lang.c
--- samba-3.6.18/source3/web/neg_lang.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/web/neg_lang.c	2013-09-24 14:34:32.347254423 +0400
@@ -34,7 +34,7 @@
 	int fd;
 	if (lang) {
 		if (asprintf(&p, "lang/%s/%s", lang, fname) != -1) {
-			fd = sys_open(p, flags, mode);
+			fd = samba_sys_open(p, flags, mode);
 			free(p);
 			if (fd != -1) {
 				return fd;
@@ -43,7 +43,7 @@
 	}
 
 	/* fall through to default name */
-	return sys_open(fname, flags, mode);
+	return samba_sys_open(fname, flags, mode);
 }
 
 
diff -aur samba-3.6.18/source3/winbindd/winbindd.c samba/source3/winbindd/winbindd.c
--- samba-3.6.18/source3/winbindd/winbindd.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/winbindd/winbindd.c	2013-09-24 14:34:33.087254401 +0400
@@ -399,7 +399,7 @@
 	 * so we don't block the main winbindd and the validation
 	 * code can safely use fork/waitpid...
 	 */
-	child_pid = sys_fork();
+	child_pid = samba_sys_fork();
 
 	if (child_pid == -1) {
 		DEBUG(1, ("winbind_msg_validate_cache: Could not fork: %s\n",
diff -aur samba-3.6.18/source3/winbindd/winbindd_cm.c samba/source3/winbindd/winbindd_cm.c
--- samba-3.6.18/source3/winbindd/winbindd_cm.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/winbindd/winbindd_cm.c	2013-09-24 14:34:33.060587735 +0400
@@ -205,7 +205,7 @@
 		domain->dc_probe_pid = (pid_t)-1;
 	}
 
-	domain->dc_probe_pid = sys_fork();
+	domain->dc_probe_pid = samba_sys_fork();
 
 	if (domain->dc_probe_pid == (pid_t)-1) {
 		DEBUG(0, ("fork_child_dc_connect: Could not fork: %s\n", strerror(errno)));
diff -aur samba-3.6.18/source3/winbindd/winbindd_dual.c samba/source3/winbindd/winbindd_dual.c
--- samba-3.6.18/source3/winbindd/winbindd_dual.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/winbindd/winbindd_dual.c	2013-09-24 14:34:33.010587737 +0400
@@ -1317,7 +1317,7 @@
 	state.request = &request;
 	state.response = &response;
 
-	child->pid = sys_fork();
+	child->pid = samba_sys_fork();
 
 	if (child->pid == -1) {
 		DEBUG(0, ("Could not fork: %s\n", strerror(errno)));
@@ -1361,7 +1361,7 @@
 
 	status = winbindd_reinit_after_fork(child, child->logfilename);
 
-	nwritten = sys_write(state.sock, &status, sizeof(status));
+	nwritten = samba_sys_write(state.sock, &status, sizeof(status));
 	if (nwritten != sizeof(status)) {
 		DEBUG(1, ("fork_domain_child: Could not write status: "
 			  "nwritten=%d, error=%s\n", (int)nwritten,
diff -aur samba-3.6.18/source4/ntvfs/posix/pvfs_open.c samba/source4/ntvfs/posix/pvfs_open.c
--- samba-3.6.18/source4/ntvfs/posix/pvfs_open.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source4/ntvfs/posix/pvfs_open.c	2013-09-24 14:34:29.770587833 +0400
@@ -677,7 +677,7 @@
 	mode = pvfs_fileperms(pvfs, attrib);
 
 	/* create the file */
-	fd = pvfs_sys_open(pvfs, name->full_name, flags | O_CREAT | O_EXCL| O_NONBLOCK, mode);
+	fd = pvfs_samba_sys_open(pvfs, name->full_name, flags | O_CREAT | O_EXCL| O_NONBLOCK, mode);
 	if (fd == -1) {
 		return pvfs_map_errno(pvfs, errno);
 	}
@@ -1549,7 +1549,7 @@
 	}
 
 	/* do the actual open */
-	fd = pvfs_sys_open(pvfs, f->handle->name->full_name, flags | O_NONBLOCK, 0);
+	fd = pvfs_samba_sys_open(pvfs, f->handle->name->full_name, flags | O_NONBLOCK, 0);
 	if (fd == -1) {
 		status = pvfs_map_errno(f->pvfs, errno);
 
diff -aur samba-3.6.18/source4/ntvfs/posix/pvfs_sys.c samba/source4/ntvfs/posix/pvfs_sys.c
--- samba-3.6.18/source4/ntvfs/posix/pvfs_sys.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source4/ntvfs/posix/pvfs_sys.c	2013-09-24 14:34:29.777254498 +0400
@@ -256,7 +256,7 @@
 /*
   wrap open for system override
 */
-int pvfs_sys_open(struct pvfs_state *pvfs, const char *filename, int flags, mode_t mode)
+int pvfs_samba_sys_open(struct pvfs_state *pvfs, const char *filename, int flags, mode_t mode)
 {
 	int fd, ret;
 	struct pvfs_sys_ctx *ctx;
diff -aur samba-3.6.18/source4/ntvfs/posix/pvfs_util.c samba/source4/ntvfs/posix/pvfs_util.c
--- samba-3.6.18/source4/ntvfs/posix/pvfs_util.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source4/ntvfs/posix/pvfs_util.c	2013-09-24 14:34:29.763921165 +0400
@@ -102,13 +102,13 @@
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	fd1 = pvfs_sys_open(pvfs, name1->full_name, O_RDONLY, 0);
+	fd1 = pvfs_samba_sys_open(pvfs, name1->full_name, O_RDONLY, 0);
 	if (fd1 == -1) {
 		talloc_free(buf);
 		return pvfs_map_errno(pvfs, errno);
 	}
 
-	fd2 = pvfs_sys_open(pvfs, name2->full_name, O_CREAT|O_EXCL|O_WRONLY, 0);
+	fd2 = pvfs_samba_sys_open(pvfs, name2->full_name, O_CREAT|O_EXCL|O_WRONLY, 0);
 	if (fd2 == -1) {
 		close(fd1);
 		talloc_free(buf);
 		

diff -aur samba-3.6.18/source3/libsmb/libsmb_path.c samba/source3/libsmb/libsmb_path.c
--- samba-3.6.18/source3/libsmb/libsmb_path.c	2013-08-12 11:25:27.000000000 +0400
+++ samba/source3/libsmb/libsmb_path.c	2014-06-05 19:06:51.014216393 +0400
@@ -363,6 +363,15 @@
 		return -1;
 	}
 
+	{
+		size_t len;
+
+		len = strlen(*pp_server);
+		if ((*pp_server)[len-1] == ':') {
+			(*pp_server)[len-1] = '\0';
+		}
+	}
+
 	if (*p == (char)0) {
 		goto decoding;  /* That's it ... */
 	}

