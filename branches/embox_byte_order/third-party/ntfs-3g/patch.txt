diff -aur ntfs-3g_ntfsprogs-2013.1.13/configure.ac ntfs-3g/configure.ac
--- ntfs-3g_ntfsprogs-2013.1.13/configure.ac	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/configure.ac	2013-07-24 15:38:21.125627035 +0400
@@ -213,7 +213,7 @@
 if test "x${enable_ntfs_3g}" = "xyes"; then
 	AC_MSG_CHECKING([fuse compatibility])
 	case "${target_os}" in
-	linux*|solaris*)
+	none|linux*|solaris*)
 		AC_ARG_WITH(
 			[fuse],
 			[AS_HELP_STRING([--with-fuse=<internal|external>],[Select FUSE library: internal or external @<:@default=internal@:>@])],
@@ -303,15 +303,15 @@
 	# Libraries often install their metadata .pc files in directories
 	# not searched by pkg-config. Let's workaround this. 
 	export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:$prefix/lib/pkgconfig:/opt/gnome/share/pkgconfig:/usr/local/share/pkgconfig
-	PKG_CHECK_MODULES(
-		[FUSE_MODULE],
-		[fuse >= 2.6.0],
-		,
-		[
-			AC_MSG_ERROR([FUSE >= 2.6.0 was not found. Either older FUSE is still present, or FUSE is not fully installed (e.g. fuse, libfuse, libfuse2, libfuse-dev, etc packages). Source code: http://fuse.sf.net])
-		]
-	)
-	FUSE_LIB_PATH=`$PKG_CONFIG --libs-only-L fuse | sed -e 's,/[/]*,/,g' -e 's,[ ]*$,,'`
+	dnl PKG_CHECK_MODULES(
+	dnl	[FUSE_MODULE],
+	dnl	[fuse >= 2.6.0],
+	dnl	,
+	dnl	[
+	dnl		AC_MSG_ERROR([FUSE >= 2.6.0 was not found. Either older FUSE is still present, or FUSE is not fully installed (e.g. fuse, libfuse, libfuse2, libfuse-dev, etc packages). Source code: http://fuse.sf.net])
+	dnl	]
+	dnl )
+	dnl FUSE_LIB_PATH=`$PKG_CONFIG --libs-only-L fuse | sed -e 's,/[/]*,/,g' -e 's,[ ]*$,,'`
 fi
 
 # Autodetect whether we can build crypto stuff or not.
@@ -480,7 +480,7 @@
 AC_FUNC_UTIME_NULL
 AC_FUNC_VPRINTF
 AC_CHECK_FUNCS([ \
-	atexit basename daemon dup2 fdatasync ffs getopt_long hasmntopt \
+	atexit basename daemon dup2 fdatasync getopt_long hasmntopt \
 	mbsinit memmove memset realpath regcomp setlocale setxattr \
 	strcasecmp strchr strdup strerror strnlen strsep strtol strtoul \
 	sysconf utime utimensat gettimeofday clock_gettime fork memcpy random snprintf \
diff -aur ntfs-3g_ntfsprogs-2013.1.13/ntfsprogs/Makefile.am ntfs-3g/ntfsprogs/Makefile.am
--- ntfs-3g_ntfsprogs-2013.1.13/ntfsprogs/Makefile.am	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/ntfsprogs/Makefile.am	2013-07-04 19:22:06.497465669 +0400
@@ -14,7 +14,7 @@
 if ENABLE_NTFSPROGS
 
 bin_PROGRAMS		= ntfsfix ntfsinfo ntfscluster ntfsls ntfscat ntfscmp
-sbin_PROGRAMS		= mkntfs ntfslabel ntfsundelete ntfsresize ntfsclone \
+sbin_PROGRAMS		= mkntfs ntfslabel ntfsresize ntfsclone \
 			  ntfscp
 EXTRA_PROGRAM_NAMES	= ntfsdump_logfile ntfswipe ntfstruncate ntfsmove \
 			  ntfsmftalloc ntfsck
@@ -140,7 +140,7 @@
 
 install-exec-hook:
 	$(INSTALL) -d $(DESTDIR)/sbin
-	$(LN_S) -f $(sbindir)/mkntfs $(DESTDIR)/sbin/mkfs.ntfs
+	$(LN_S) -f $(sbindir)/mkntfs $(sbindir)/mkfs.ntfs
 
 install-data-hook:
 	$(INSTALL) -d $(DESTDIR)$(man8dir)
diff -aur ntfs-3g_ntfsprogs-2013.1.13/src/ntfs-3g.c ntfs-3g/src/ntfs-3g.c
--- ntfs-3g_ntfsprogs-2013.1.13/src/ntfs-3g.c	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/src/ntfs-3g.c	2013-07-04 18:00:24.117311852 +0400
@@ -62,7 +62,7 @@
 #ifdef HAVE_LIMITS_H
 #include <limits.h>
 #endif
-#include <syslog.h>
+//#include <syslog.h>
 #include <sys/wait.h>
 
 #ifdef HAVE_SETXATTR
@@ -3650,7 +3650,7 @@
 #ifndef DEBUG
 			ntfs_log_set_handler(ntfs_log_handler_syslog);
 			/* Override default libntfs identify. */
-			openlog(EXEC_NAME, LOG_PID, LOG_DAEMON);
+			//openlog(EXEC_NAME, LOG_PID, LOG_DAEMON);
 #endif
 		}
 	}
diff -aur ntfs-3g_ntfsprogs-2013.1.13/src/secaudit.c ntfs-3g/src/secaudit.c
--- ntfs-3g_ntfsprogs-2013.1.13/src/secaudit.c	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/src/secaudit.c	2013-07-04 17:56:57.136605713 +0400
@@ -1348,7 +1348,7 @@
  *		Redefine early error messages in stand-alone situations
  */
 
-void ntfs_log_early_error(const char *format, ...)
+void _ntfs_log_early_error(const char *format, ...)
 {
 	va_list args;
 
diff -aur ntfs-3g_ntfsprogs-2013.1.13/src/Makefile.am ntfs-3g/src/Makefile.am
--- ntfs-3g_ntfsprogs-2013.1.13/src/Makefile.am	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/src/Makefile.am	2013-07-23 02:33:03.807658150 +0400
@@ -15,9 +15,9 @@
 
 bin_PROGRAMS	 = ntfs-3g.probe \
 		ntfs-3g.usermap \
-		ntfs-3g.secaudit
-rootbin_PROGRAMS = ntfs-3g lowntfs-3g
-rootsbin_DATA 	 = #Create directory
+		ntfs-3g.secaudit \
+		ntfs-3g
+#rootsbin_DATA 	 = #Create directory
 man_MANS	 = ntfs-3g.8 ntfs-3g.probe.8 \
 		ntfs-3g.usermap.8 \
 		ntfs-3g.secaudit.8
@@ -59,7 +59,7 @@
 ntfs_3g_usermap_SOURCES 	= usermap.c
 ntfs_3g_secaudit_SOURCES 	= secaudit.c
 
-drivers : $(FUSE_LIBS) ntfs-3g lowntfs-3g
+drivers : $(FUSE_LIBS) ntfs-3g
 
 if RUN_LDCONFIG
 install-exec-hook:
@@ -70,17 +70,14 @@
 install-exec-local:	install-rootbinPROGRAMS
 	$(MKDIR_P) "$(DESTDIR)/sbin"
 	$(LN_S) -f "$(rootbindir)/ntfs-3g" "$(DESTDIR)/sbin/mount.ntfs-3g"
-	$(LN_S) -f "$(rootbindir)/lowntfs-3g" "$(DESTDIR)/sbin/mount.lowntfs-3g"
 endif
 
 install-data-local:	install-man8
 	$(LN_S) -f ntfs-3g.8 "$(DESTDIR)$(man8dir)/mount.ntfs-3g.8"
-	$(LN_S) -f ntfs-3g.8 "$(DESTDIR)$(man8dir)/mount.lowntfs-3g.8"
 
 uninstall-local:
 	$(RM) -f "$(DESTDIR)$(man8dir)/mount.ntfs-3g.8"
 if ENABLE_MOUNT_HELPER
-	$(RM) -f "$(DESTDIR)/sbin/mount.ntfs-3g" "$(DESTDIR)/sbin/mount.lowntfs-3g"
 endif
 
 endif # ENABLE_NTFS_3G
diff -aur ntfs-3g_ntfsprogs-2013.1.13/libntfs-3g/Makefile.am ntfs-3g/libntfs-3g/Makefile.am
--- ntfs-3g_ntfsprogs-2013.1.13/libntfs-3g/Makefile.am	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/libntfs-3g/Makefile.am	2013-07-04 19:59:31.139125541 +0400
@@ -54,7 +54,7 @@
 
 # We may need to move .so files to root
 # And create ldscript or symbolic link from /usr
-install-exec-hook: install-rootlibLTLIBRARIES
+_install-exec-hook: install-rootlibLTLIBRARIES
 if INSTALL_LIBRARY
 	if [ ! "$(rootlibdir)" -ef "$(libdir)" ]; then \
 		$(MV) -f "$(DESTDIR)/$(libdir)"/libntfs-3g.so* "$(DESTDIR)/$(rootlibdir)";  \
diff -aur ntfs-3g_ntfsprogs-2013.1.13/include/ntfs-3g/types.h ntfs-3g/include/ntfs-3g/types.h
--- ntfs-3g_ntfsprogs-2013.1.13/include/ntfs-3g/types.h	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/include/ntfs-3g/types.h	2013-07-23 04:28:35.692810104 +0400
@@ -27,7 +27,7 @@
 #include "config.h"
 #endif
 
-#if HAVE_STDINT_H || !HAVE_CONFIG_H
+#if (defined(HAVE_STDINT_H) && HAVE_STDINT_H) || !defined(HAVE_CONFIG_H)
 #include <stdint.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
diff -aur ntfs-3g_ntfsprogs-2013.1.13/libntfs-3g/unix_io.c ntfs-3g/libntfs-3g/unix_io.c
--- ntfs-3g_ntfsprogs-2013.1.13/libntfs-3g/unix_io.c	2013-01-13 10:46:35.000000000 +0400
+++ ntfs-3g/libntfs-3g/unix_io.c	2013-07-24 17:26:11.944697135 +0400
@@ -157,10 +157,12 @@
 		err = errno;
 		ntfs_log_perror("Failed to %s lock '%s'", NDevReadOnly(dev) ? 
 				"read" : "write", dev->d_name);
+                goto ignore;
 		if (close(DEV_FD(dev)))
 			ntfs_log_perror("Failed to close '%s'", dev->d_name);
 		goto err_out;
 	}
+ ignore:
 	
 	NDevSetOpen(dev);
 	return 0;
 	
diff -aur ntfs-3g_ntfsprogs-2013.1.13/include/ntfs-3g/endians.h ntfs-3g/include/ntfs-3g/types.h
--- ntfs-3g_ntfsprogs-2013.1.13/include/ntfs-3g/endians.h	2013-09-27 15:24:21.000000000 +0400
+++ ntfs-3g/include/ntfs-3g/endians.h	2013-09-27 15:25:46.301956913 +0400
@@ -110,56 +110,14 @@
 
 #if defined(__LITTLE_ENDIAN) && (__BYTE_ORDER == __LITTLE_ENDIAN)
 
-#define __le16_to_cpu(x) (x)
-#define __le32_to_cpu(x) (x)
-#define __le64_to_cpu(x) (x)
-
-#define __cpu_to_le16(x) (x)
-#define __cpu_to_le32(x) (x)
-#define __cpu_to_le64(x) (x)
-
-#define __constant_le16_to_cpu(x) (x)
-#define __constant_le32_to_cpu(x) (x)
-#define __constant_le64_to_cpu(x) (x)
-
-#define __constant_cpu_to_le16(x) (x)
-#define __constant_cpu_to_le32(x) (x)
-#define __constant_cpu_to_le64(x) (x)
-
 #elif defined(__BIG_ENDIAN) && (__BYTE_ORDER == __BIG_ENDIAN)
 
-#define __le16_to_cpu(x) bswap_16(x)
-#define __le32_to_cpu(x) bswap_32(x)
-#define __le64_to_cpu(x) bswap_64(x)
-
-#define __cpu_to_le16(x) bswap_16(x)
-#define __cpu_to_le32(x) bswap_32(x)
-#define __cpu_to_le64(x) bswap_64(x)
-
-#define __constant_le16_to_cpu(x) __ntfs_bswap_constant_16((u16)(x))
-#define __constant_le32_to_cpu(x) __ntfs_bswap_constant_32((u32)(x))
-#define __constant_le64_to_cpu(x) __ntfs_bswap_constant_64((u64)(x))
-
-#define __constant_cpu_to_le16(x) __ntfs_bswap_constant_16((u16)(x))
-#define __constant_cpu_to_le32(x) __ntfs_bswap_constant_32((u32)(x))
-#define __constant_cpu_to_le64(x) __ntfs_bswap_constant_64((u64)(x))
-
 #else
 
 #error "You must define __BYTE_ORDER to be __LITTLE_ENDIAN or __BIG_ENDIAN."
 
 #endif
 
-/* Unsigned from LE to CPU conversion. */
-
-#define le16_to_cpu(x)		(u16)__le16_to_cpu((u16)(x))
-#define le32_to_cpu(x)		(u32)__le32_to_cpu((u32)(x))
-#define le64_to_cpu(x)		(u64)__le64_to_cpu((u64)(x))
-
-#define le16_to_cpup(x)		(u16)__le16_to_cpu(*(const u16*)(x))
-#define le32_to_cpup(x)		(u32)__le32_to_cpu(*(const u32*)(x))
-#define le64_to_cpup(x)		(u64)__le64_to_cpu(*(const u64*)(x))
-
 /* Signed from LE to CPU conversion. */
 
 #define sle16_to_cpu(x)		(s16)__le16_to_cpu((s16)(x))
@@ -170,16 +128,6 @@
 #define sle32_to_cpup(x)	(s32)__le32_to_cpu(*(s32*)(x))
 #define sle64_to_cpup(x)	(s64)__le64_to_cpu(*(s64*)(x))
 
-/* Unsigned from CPU to LE conversion. */
-
-#define cpu_to_le16(x)		(u16)__cpu_to_le16((u16)(x))
-#define cpu_to_le32(x)		(u32)__cpu_to_le32((u32)(x))
-#define cpu_to_le64(x)		(u64)__cpu_to_le64((u64)(x))
-
-#define cpu_to_le16p(x)		(u16)__cpu_to_le16(*(u16*)(x))
-#define cpu_to_le32p(x)		(u32)__cpu_to_le32(*(u32*)(x))
-#define cpu_to_le64p(x)		(u64)__cpu_to_le64(*(u64*)(x))
-
 /* Signed from CPU to LE conversion. */
 
 #define cpu_to_sle16(x)		(s16)__cpu_to_le16((s16)(x))

