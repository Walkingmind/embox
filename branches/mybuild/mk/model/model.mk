# Generated by Xpand using M2Make template.

# Model of 'EModel' package.

ifndef __model_model_mk
__model_model_mk := $(lastword $(MAKEFILE_LIST))

include $(dir $(__model_model_mk))model_impl.mk

#
# Model object 'ENode'.
#
# The following features are available:
#   - reference 'eMetaClass'
#   - attribute 'eResource'
#   - reference 'eContainer'
#   - reference 'eRootContainer'
#   - reference 'eContents'
#   - reference 'eAllContents'
#
# To instantiate this class use 'EModelFactory.createENode'.
define class-ENode
	$(super ENode)

	# 'eMetaClass' reference.
	$(property eMetaClass : EMetaClass)# read-only.

	# 'eResource' attribute.
	$(property eResource : EResource)# read-only.

	# 'eContainer' reference.
	$(property eContainer : ENode)# read-only.

	# 'eRootContainer' reference.
	$(property eRootContainer : ENode)# read-only.

	# 'eContents' bidirectional reference.
	# The opposite reference is 'eContents'.
	$(property eContents... : ENode)# read-only.

	# 'eAllContents' bidirectional reference.
	# The opposite reference is 'eAllContents'.
	$(property eAllContents... : ENode)# read-only.

endef

#
# Model object 'ELink'.
#
# The following features are available:
#   - reference 'eMetaReference'
#
# To instantiate this class use 'EModelFactory.createELink'.
define class-ELink
	$(super ENode)
	$(super ENamed)

	# 'eMetaReference' reference.
	$(property eMetaReference : EMetaReference)

endef

#
# Model object 'EMetaType'.
#
# The following features are available:
#   - attribute 'instanceClass'
#   - reference 'eMetaModel'
#
# This is an abstract class. You can't instantiate it directly.
define class-EMetaType
	$(super ENode)
	$(super ENamed)

	# 'instanceClass' attribute.
	$(property instanceClass : EString)

	# 'eMetaModel' bidirectional container reference.
	# The opposite reference is 'EMetaModel.eTypes'.
	$(property eMetaModel : EMetaModel)# read-only.

	# 'isInstance : EBoolean' operation.
	#   1. object : ENode
	$(method isInstance)

endef

#
# Model object 'EMetaClass'.
#
# The following features are available:
#   - attribute 'abstract'
#   - attribute 'interface'
#   - reference 'eSuperTypes'
#   - reference 'eAllSuperTypes'
#   - reference 'eFeatures'
#   - reference 'eAllFeatures'
#   - reference 'eAttributes'
#   - reference 'eAllAttributes'
#   - reference 'eReferences'
#   - reference 'eAllReferences'
#   - reference 'eAllContainments'
#
# To instantiate this class use 'EModelFactory.createEMetaClass'.
define class-EMetaClass
	$(super ENode)
	$(super EMetaType)

	# 'abstract' attribute.
	$(property isAbstract : EBoolean)

	# 'interface' attribute.
	$(property isInterface : EBoolean)

	# 'eSuperTypes' reference.
	$(property eSuperTypes... : EMetaClass)

	# 'eAllSuperTypes' reference.
	$(property eAllSuperTypes... : EMetaClass)# read-only.

	# 'eFeatures' bidirectional containment reference.
	# The opposite reference is 'EMetaFeature.eContainingClass'.
	$(property eFeatures... : EMetaFeature)

	# 'eAllFeatures' reference.
	$(property eAllFeatures... : EMetaFeature)# read-only.

	# 'eAttributes' reference.
	$(property eAttributes... : EMetaAttribute)# read-only.

	# 'eAllAttributes' reference.
	$(property eAllAttributes... : EMetaAttribute)# read-only.

	# 'eReferences' reference.
	$(property eReferences... : EMetaReference)# read-only.

	# 'eAllReferences' reference.
	$(property eAllReferences... : EMetaReference)# read-only.

	# 'eAllContainments' reference.
	$(property eAllContainments... : EMetaReference)# read-only.

	# 'isSuperTypeOf : EBoolean' operation.
	#   1. someClass : EMetaClass
	$(method isSuperTypeOf)

endef

#
# Model object 'EMetaPrimitive'.
#
# To instantiate this class use 'EModelFactory.createEMetaPrimitive'.
define class-EMetaPrimitive
	$(super ENode)
	$(super EMetaType)

endef

#
# Model object 'EMetaFeature'.
#
# The following features are available:
#   - attribute 'changeable'
#   - attribute 'volatile'
#   - attribute 'transient'
#   - attribute 'derived'
#   - attribute 'instanceProperty'
#   - reference 'eContainingClass'
#
# This is an abstract class. You can't instantiate it directly.
define class-EMetaFeature
	$(super ENode)
	$(super ETyped)

	# 'changeable' attribute.
	$(property isChangeable : EBoolean)

	# 'volatile' attribute.
	$(property isVolatile : EBoolean)

	# 'transient' attribute.
	$(property isTransient : EBoolean)

	# 'derived' attribute.
	$(property isDerived : EBoolean)

	# 'instanceProperty' attribute.
	$(property instanceProperty : EString)

	# 'eContainingClass' bidirectional container reference.
	# The opposite reference is 'EMetaClass.eFeatures'.
	$(property eContainingClass : EMetaClass)# read-only.

endef

#
# Model object 'EMetaReference'.
#
# The following features are available:
#   - attribute 'containment'
#   - attribute 'container'
#   - reference 'eOpposite'
#   - reference 'eReferenceType'
#
# To instantiate this class use 'EModelFactory.createEMetaReference'.
define class-EMetaReference
	$(super ENode)
	$(super EMetaFeature)

	# 'containment' attribute.
	$(property isContainment : EBoolean)

	# 'container' attribute.
	$(property isContainer : EBoolean)# read-only.

	# 'eOpposite' reference.
	$(property eOpposite : EMetaReference)

	# 'eReferenceType' reference.
	$(property eReferenceType : EMetaClass)# read-only.

endef

#
# Model object 'EMetaAttribute'.
#
# The following features are available:
#   - reference 'eAttributeType'
#
# To instantiate this class use 'EModelFactory.createEMetaAttribute'.
define class-EMetaAttribute
	$(super ENode)
	$(super EMetaFeature)

	# 'eAttributeType' reference.
	$(property eAttributeType : EMetaPrimitive)# read-only.

endef

#
# Model object 'EMetaModel'.
#
# The following features are available:
#   - reference 'eFactory'
#   - reference 'eTypes'
#
# To instantiate this class use 'EModelFactory.createEMetaModel'.
define class-EMetaModel
	$(super ENode)
	$(super ENamed)

	# 'eFactory' bidirectional reference.
	# The opposite reference is 'EModelFactory.eMetaModel'.
	$(property eFactory : EModelFactory)

	# 'eTypes' bidirectional containment reference.
	# The opposite reference is 'EMetaType.eMetaModel'.
	$(property eTypes... : EMetaType)

endef

#
# Model object 'EModelFactory'.
#
# The following features are available:
#   - reference 'eMetaModel'
#
# To instantiate this class use 'EModelFactory.createEModelFactory'.
define class-EModelFactory
	$(super ENode)

	# 'eMetaModel' bidirectional reference.
	# The opposite reference is 'EMetaModel.eFactory'.
	$(property eMetaModel : EMetaModel)

endef

#
# Model object 'ENamed'.
#
# The following features are available:
#   - attribute 'name'
#
# This is an abstract class. You can't instantiate it directly.
define class-ENamed
	$(super ENode)

	# 'name' attribute.
	$(property name : EString)

endef

#
# Model object 'ETyped'.
#
# The following features are available:
#   - attribute 'lowerBound'
#   - attribute 'upperBound'
#   - reference 'eType'
#
# This is an abstract class. You can't instantiate it directly.
define class-ETyped
	$(super ENode)
	$(super ENamed)

	# 'lowerBound' attribute.
	$(property lowerBound : EInt)

	# 'upperBound' attribute.
	$(property upperBound : EInt)

	# 'eType' reference.
	$(property eType : EMetaType)

endef

$(def_all)

endif # __model_model_mk

