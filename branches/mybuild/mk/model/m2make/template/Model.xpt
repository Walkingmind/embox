«IMPORT ecore»

«EXTENSION template::GeneratorExtensions»
«EXTENSION org::eclipse::xtend::util::stdlib::counter»

«DEFINE main FOR EPackage»«FILE fileName("model") -»
«fileHeader()»

# Model of '«name»' package.

«inclusionGuardBegin("model")»

«includeFile("model", "model_impl")»
«EXPAND classifier FOREACH eClassifiers.typeSelect(EClass) -»

$(def_all)

«inclusionGuardEnd("model")»

«ENDFILE»«ENDDEFINE»

«DEFINE classifier FOR EClass»
#
# Model object '«name»'.
#
«LET eStructuralFeatures AS features»«IF !features.isEmpty -»
# The following features are available:
«FOREACH features AS feature -»
#   - «EReference.isInstance(feature)
		? "reference"
		: "attribute"» '«feature.name»'
«ENDFOREACH -»
#
«ENDIF»«ENDLET -»
«IF abstract || interface -»
# This is an «"abstract ".ifIs(abstract) + "interface ".ifIs(interface)
	»class. You can't instantiate it directly.
«ELSE -»
# To instantiate this class use '«ePackage.factoryName()».«factoryMethodName()»'.
«ENDIF -»
define class-«className()»
	«mkSuper("ENode")»
«FOREACH eSuperTypes AS superType -»
	«mkSuper(superType.className())»
«ENDFOREACH -»
«EXPAND feature FOREACH eStructuralFeatures -»
«EXPAND operation FOREACH eOperations»
endef
«ENDDEFINE»

«DEFINE feature FOR EStructuralFeature»
	«ERROR "Unexpected EStructuralFeature: " + this»
«ENDDEFINE»

«DEFINE feature FOR EAttribute»
	# '«name»' attribute.
«EXPAND featureProperty FOR this -»
«ENDDEFINE»

«DEFINE feature FOR EReference»
	# '«name»' «
		"bidirectional ".ifIs(eOpposite) +
		"containment "  .ifIs(containment) +
		"container "    .ifIs(container)»reference.
«IF eOpposite != null -»
	# The opposite reference is '«
		(eReferenceType.name + ".").ifIs(eReferenceType != eContainingClass) + 
		eOpposite.name»'.
«ENDIF -»
«EXPAND featureProperty FOR this -»
«ENDDEFINE»

«DEFINE featureProperty FOR EStructuralFeature -»
	«mkProperty(propertyName() + memberCardinality() + memberType()) +
		"# read-only.".ifIs(!changeable)»
«ENDDEFINE»

«DEFINE operation FOR EOperation»
	# '«name»' operation.
«FOREACH eParameters AS param -»
	#   «counterInc()». «param.name» : «param.eType.name»
«ENDFOREACH -»
	«mkMethod(methodName())»
«ENDDEFINE»

