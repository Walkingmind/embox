«IMPORT ecore»

«EXTENSION template::GeneratorExtensions»

«DEFINE main FOR EPackage»«FILE fileName("metamodel_impl") -»
«fileHeader()»

# Metamodel implementation for '«name»' package.

«inclusionGuardBegin("metamodel_impl")»

# Creates and initializes contents of '«name»' meta model.
define class-«metaModelImplName()»
	«mkSuper(metaModelName())»

	«mkSuper("EMetaModelImpl")»

	# Define properties as fields.
«EXPAND createClassifier FOREACH eClassifiers.typeSelect(EClass) -»

	# Initialize the objects and relations between them.
«EXPAND initClassifier FOREACH eClassifiers.typeSelect(EClass) -»

	# Bind objects to instance classes and features to properties.
«EXPAND bindClassifier FOREACH eClassifiers.typeSelect(EClass) -»

endef

$(def_all)

«inclusionGuardEnd("metamodel_impl")»

«ENDFILE»«ENDDEFINE»


«DEFINE createClassifier FOR EClass»
	«mkPropertyField(id(),
		mkInvoke("createMetaClass", id()))»
	«EXPAND createFeature FOREACH eStructuralFeatures -»
«ENDDEFINE»

«DEFINE createFeature FOR EStructuralFeature»
	«ERROR "Unexpected EStructuralFeature: " + this»
«ENDDEFINE»

«DEFINE createFeature FOR EAttribute -»
«EXPAND createFeature("createMetaAttribute") -»
«ENDDEFINE»

«DEFINE createFeature FOR EReference -»
«EXPAND createFeature("createMetaReference") -»
«ENDDEFINE»

«DEFINE createFeature(String methodName) FOR EStructuralFeature -»
	«mkPropertyField(id(),
		mkInvoke(methodName, mkGet(eContainingClass.id()) + "," + id()))»
«ENDDEFINE»


«DEFINE initClassifier FOR EClass»
	«mkInvoke("initMetaClass", mkGet(id()) + ",\n\t\t" +
		name + "," +
		eSuperTypes.id().mkGet().toString(" ") + "," + 
				metaFlags().toString(" "))»
	«EXPAND initFeature FOREACH eStructuralFeatures -»
«ENDDEFINE»

«DEFINE initFeature FOR EStructuralFeature»
	«ERROR "Unexpected EStructuralFeature: " + this»
«ENDDEFINE»

«DEFINE initFeature FOR EAttribute -»
	«mkInvoke("initMetaAttribute", mkGet(id()) + ",\n\t\t" +
		name + "," + lowerBound + "," + upperBound.ifIs(upperBound >= 0) + "," +
		metaFlags().toString(" "))»
«ENDDEFINE»

«DEFINE initFeature FOR EReference -»
	«mkInvoke("initMetaReference", mkGet(id()) + ",\n\t\t" + 
		name + "," + lowerBound + "," + upperBound.ifIs(upperBound >= 0) + "," +
		mkGet(eReferenceType.id()) + "," +
		mkGet(eOpposite.id()).ifIs(eOpposite) + "," +
		metaFlags().toString(" "))»
«ENDDEFINE»


«DEFINE bindClassifier FOR EClass»
	«mkInvoke("bindMetaClass", mkGet(id()) + "," + className())»
«FOREACH eStructuralFeatures AS f -»
	«mkInvoke("bindMetaFeature", mkGet(f.id()) + "," + f.propertyName())»
«ENDFOREACH -»
«ENDDEFINE»

