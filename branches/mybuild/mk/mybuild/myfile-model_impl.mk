# Generated by Xpand using M2Make template.

# Model implementation of 'myFile' package.

ifndef __mybuild_myfile_model_impl_mk
__mybuild_myfile_model_impl_mk := $(lastword $(MAKEFILE_LIST))


# Implementation of 'Model' model object .
define class-ModelImpl
	$(super Model)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Model))

	$(field package : Package)
	$(method getPackage,
		$(get package))
	$(method setPackage,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Model_Package)))

	$(field imports : Import)
	$(method getImports,
		$(get imports))
	$(method setImports,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Model_Imports)))
	$(method addImports,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Model_Imports)))
	$(method removeImports,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Model_Imports)))
	$(method clearImports,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Model_Imports)))

	$(field entities : Entity)
	$(method getEntities,
		$(get entities))
	$(method setEntities,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Model_Entities)))
	$(method addEntities,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Model_Entities)))
	$(method removeEntities,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Model_Entities)))
	$(method clearEntities,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Model_Entities)))
endef

# Implementation of 'Package' model object .
define class-PackageImpl
	$(super Package)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Package))

	$(field name)
	$(method getName,
		$(get name))
	$(method setName,
		$(set name,$1))
endef

# Implementation of 'Import' model object .
define class-ImportImpl
	$(super Import)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Import))

	$(field importedNamespace)
	$(method getImportedNamespace,
		$(get importedNamespace))
	$(method setImportedNamespace,
		$(set importedNamespace,$1))
endef

# Implementation of 'Entity' model object .
define class-EntityImpl
	$(super Entity)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Entity))

	$(field name)
	$(method getName,
		$(get name))
	$(method setName,
		$(set name,$1))
endef

# Implementation of 'Interface' model object .
define class-InterfaceImpl
	$(super Interface)

	$(super NodeImpl)
	$(super Entity)Impl

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Interface))

	$(field superType : Interface)
	$(method getSuperType,
		$(get superType))
	$(method setSuperType,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Interface_SuperType)))

	$(field features : Feature)
	$(method getFeatures,
		$(get features))
	$(method setFeatures,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Interface_Features)))
	$(method addFeatures,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Interface_Features)))
	$(method removeFeatures,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Interface_Features)))
	$(method clearFeatures,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Interface_Features)))

	$(field subTypes : Interface)
	$(method getSubTypes,
		$(get subTypes))
	$(method setSubTypes,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Interface_SubTypes)))
	$(method addSubTypes,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Interface_SubTypes)))
	$(method removeSubTypes,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Interface_SubTypes)))
	$(method clearSubTypes,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Interface_SubTypes)))
endef

define class-ReferenceToInterfaceImpl
	$(super ReferenceImpl,$(value 1))

	$(method getReferenceMetaClass,
		$(get myFileMetaModelInstance->Interface))
endef

# Implementation of 'Feature' model object .
define class-FeatureImpl
	$(super Feature)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Feature))

	$(field name)
	$(method getName,
		$(get name))
	$(method setName,
		$(set name,$1))

	$(field superType : Feature)
	$(method getSuperType,
		$(get superType))
	$(method setSuperType,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Feature_SuperType)))

	$(field interface : Interface)
	$(method getInterface,
		$(get interface))
	$(method setInterface,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Feature_Interface)))

	$(field providedBy : Module)
	$(method getProvidedBy,
		$(get providedBy))
	$(method setProvidedBy,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Feature_ProvidedBy)))
	$(method addProvidedBy,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Feature_ProvidedBy)))
	$(method removeProvidedBy,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Feature_ProvidedBy)))
	$(method clearProvidedBy,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Feature_ProvidedBy)))

	$(field requiredBy : Module)
	$(method getRequiredBy,
		$(get requiredBy))
	$(method setRequiredBy,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Feature_RequiredBy)))
	$(method addRequiredBy,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Feature_RequiredBy)))
	$(method removeRequiredBy,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Feature_RequiredBy)))
	$(method clearRequiredBy,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Feature_RequiredBy)))

	$(field subTypes : Feature)
	$(method getSubTypes,
		$(get subTypes))
	$(method setSubTypes,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Feature_SubTypes)))
	$(method addSubTypes,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Feature_SubTypes)))
	$(method removeSubTypes,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Feature_SubTypes)))
	$(method clearSubTypes,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Feature_SubTypes)))
endef

define class-ReferenceToFeatureImpl
	$(super ReferenceImpl,$(value 1))

	$(method getReferenceMetaClass,
		$(get myFileMetaModelInstance->Feature))
endef

# Implementation of 'Module' model object .
define class-ModuleImpl
	$(super Module)

	$(super NodeImpl)
	$(super Entity)Impl

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Module))

	$(field static)
	$(method getStatic,
		$(get static))
	$(method setStatic,
		$(set static,$1))

	$(field abstract)
	$(method getAbstract,
		$(get abstract))
	$(method setAbstract,
		$(set abstract,$1))

	$(field superType : Module)
	$(method getSuperType,
		$(get superType))
	$(method setSuperType,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_SuperType)))

	$(field subTypes : Module)
	$(method getSubTypes,
		$(get subTypes))
	$(method setSubTypes,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_SubTypes)))
	$(method addSubTypes,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Module_SubTypes)))
	$(method removeSubTypes,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Module_SubTypes)))
	$(method clearSubTypes,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Module_SubTypes)))

	$(field depends : Module)
	$(method getDepends,
		$(get depends))
	$(method setDepends,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_Depends)))
	$(method addDepends,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Module_Depends)))
	$(method removeDepends,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Module_Depends)))
	$(method clearDepends,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Module_Depends)))

	$(field dependent : Module)
	$(method getDependent,
		$(get dependent))
	$(method setDependent,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_Dependent)))
	$(method addDependent,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Module_Dependent)))
	$(method removeDependent,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Module_Dependent)))
	$(method clearDependent,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Module_Dependent)))

	$(field provides : Feature)
	$(method getProvides,
		$(get provides))
	$(method setProvides,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_Provides)))
	$(method addProvides,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Module_Provides)))
	$(method removeProvides,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Module_Provides)))
	$(method clearProvides,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Module_Provides)))

	$(field requires : Feature)
	$(method getRequires,
		$(get requires))
	$(method setRequires,
		$(invoke setNodeReference,$(get myFileMetaModelInstance->Module_Requires)))
	$(method addRequires,
		$(invoke addNodeReference,$(get myFileMetaModelInstance->Module_Requires)))
	$(method removeRequires,
		$(invoke removeNodeReference,$(get myFileMetaModelInstance->Module_Requires)))
	$(method clearRequires,
		$(invoke clearNodeReference,$(get myFileMetaModelInstance->Module_Requires)))
endef

define class-ReferenceToModuleImpl
	$(super ReferenceImpl,$(value 1))

	$(method getReferenceMetaClass,
		$(get myFileMetaModelInstance->Module))
endef

# Implementation of 'Filename' model object .
define class-FilenameImpl
	$(super Filename)

	$(super NodeImpl)

	$(method getMetaClass,
		$(get myFileMetaModelInstance->Filename))

	$(field name)
	$(method getName,
		$(get name))
	$(method setName,
		$(set name,$1))
endef

$(def_all)

endif # __mybuild_myfile_model_impl_mk

