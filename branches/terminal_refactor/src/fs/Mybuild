package embox.fs

module node {
	source "node.c"
	option number fnode_quantity=64
}

module filesystem {
	source "file_system.c"
	option number fs_quantity=16

	depends embox.fs.driver.repo
}

module file_desc {
	source "file_desc.c"
	option number fdesc_quantity=32
}

@DefaultImpl(NoFileSystem)
abstract module fs_api {

}

module NoFileSystem extends fs_api{
	depends fs_name_opt

	depends SysLibFsNone
	depends SysLibFileSystemNone
}

module xattr {
	source "xattr.c"
}

module core extends fs_api {
	source "vfs.c", "path.c"

	depends fs_name_opt

	depends embox.compat.posix.fs
	depends file_desc, node
	depends embox.fs.driver.repo

	depends embox.fs.SysLibFsFull
	depends filesystem
}

module fs_name_opt {
	option number file_name_length=32
	option number path_length=256
}

module posix_compat {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "posix_compat.c"
	depends fs_api
	depends embox.kernel.task.idx_table
}

module rootfs {
	source "rootfs.c"
	option string fstype = "initfs"
	option string src = ""
	option string dst = "/"
	depends node, driver.repo
//	depends embox.mem.heap_bm
	depends embox.fs.sys.fsop
}
