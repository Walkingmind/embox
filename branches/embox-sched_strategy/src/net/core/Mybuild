package embox.net

abstract module entry_api { }

module dev {
	source "netdev.c" 
	option number netdev_quantity=8
	option number netdev_table_sz=3

	source "netdev_process.c"

	depends skbuff
	depends embox.lib.LibC
	depends embox.mem.pool
	depends embox.util.hashtable
	depends network_layer /* depends from network_layer.c */
}

module network_layer {
	source "network_layer.c"

	depends skbuff
	depends embox.lib.LibC
	depends embox.compat.linux.LibLinux
	depends embox.framework.LibFrameworkNet
	/* depends from dev.c */
}

module skbuff {
	source "skb.c"
	option number amount_skb=2000
	option number amount_skb_buff=2000
	option number skb_buff_size=1514 /* for example */

	source "skb_queue.c"
	option number amount_skb_queue=16
	
	depends embox.mem.pool
	depends embox.lib.LibC
}

module core {
	source "inetdev.c"
	option number net_callback_quantity=16
	option number net_interfaces_quantity=4

	depends dev /* for dev.c */
	depends embox.mem.pool
	depends embox.lib.LibC

	source "sock.c"
	option number min_amount_sock=1

	depends skbuff
	depends embox.mem.slab
	depends embox.lib.LibC
	depends embox.kernel.thread.event
	depends embox.kernel.task.io_sync_api /* TODO */
}

module neighbour {
	source "neighbour.c"
	option number neighbour_quantity=10
	option number neighbour_expire=60

	depends embox.compat.posix.util.time /* for time() */
	depends embox.mem.pool
	depends embox.lib.LibC
}

module net_entry extends entry_api {
	source "net_entry.c"

	depends network_layer /* for network_layer.c */
	depends embox.lib.LibC
}
