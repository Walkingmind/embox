package embox.compat.posix

module LibPosix {
	depends embox.compat.posix.util.All
	depends embox.compat.posix.proc.All
	depends embox.compat.posix.idx.All
	depends file
	depends fs
	depends sched
}

static module fs {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "fs.c"

	depends embox.kernel.task.errno
}

static module file_ops {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "file_ops.c"

	depends embox.kernel.task.api
	depends embox.kernel.task.idx_table
	depends embox.kernel.task.errno
	depends embox.kernel.task.io_sync_api
	depends embox.init.diag_index_desc
	
}

module file {
	depends file_ops
	depends open
}

module xattr {
	source "xattr.c"

	depends embox.fs.xattr
}

static module dirent {
	option number dir_quantity=4
	source "dirent.c"
	
	depends embox.fs.core
	depends embox.mem.objalloc
	depends embox.lib.LibCString
}

static module open {
	source "open.c"

	depends embox.fs.posix_compat
	depends embox.kernel.task.errno
}

static module sched {
	source "sched_posix.c"
}

static module passwd {
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "passwd.c"

	@InitFS
	source "passwd"

	@InitFS
	source "shadow"
}
