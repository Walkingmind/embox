
package('embox.net')

module(
	'arp_queue',

  	options = [
		Integer('amount_package',
 		,default=20),
 		Integer('htable_width',
 		,default=3),
 		Integer('package_timeout',
 		,default=1000),
	],

 	sources = [
		'arp_queue.c',
	],

 	depends = [
		'embox.util.hashtable',
 		'network_layer',
 		'skbuff',
 		'route',
 		'embox.kernel.time.kernel_time',
 		'embox.kernel.timer.sys_timer',
 		'embox.kernel.thread.sched',
 		'embox.kernel.thread.event',
 		'embox.mem.objalloc',
	],

) 
module(
	'arp',

   	sources = [
		'arp.c',
	],

 	depends = [
		'network_layer',
 		'skbuff',
 		'arp_queue',
 		'route',
 		'neighbour',
 		'embox.lib.LibC',
 		'embox.framework.LibFrameworkNet',
	],

) 
module(
	'rarp',

   	sources = [
		'rarp.c',
	],

 	depends = [
		'network_layer',
 		'skbuff',
 		'neighbour',
 		'embox.lib.LibC',
 		'embox.framework.LibFrameworkNet',
	],

) 
module(
	'icmp',

   	sources = [
		'icmp.c',
	],

 	depends = [
		'eth',
 		'raw_sock',
 		'core',
 		'ipv4',
 		'skbuff',
 		'embox.kernel.time.kernel_time',
 		'embox.framework.LibFrameworkNet',
	],

) 
module(
	'ipv4',

   	sources = [
		'ip_fragment.c',
 		'ip_input.c',
 		'ip_options.c',
 		'ip_output.c',
	],

 	depends = [
		'skbuff',
 		'embox.mem.objalloc',
 		'embox.kernel.timer.sys_timer',
 		'embox.lib.LibC',
 		'skbuff',
 		'raw_sock',
 		'embox.lib.LibC',
 		'network_layer',
 		'skbuff',
 		'route',
 		'eth',
	],

) 
module(
	'route',

  	options = [
		Integer('route_table_size',
 		,default=8),
	],

 	sources = [
		'route.c',
	],

 	depends = [
		'core',
 		'embox.mem.pool',
	],

) 
module(
	'tcp',

   	sources = [
		'tcp.c',
	],

 	depends = [
		'skbuff',
 		'core',
 		'ipv4',
 		'af_inet',
 		'util',
 		'embox.kernel.time.kernel_time',
 		'embox.kernel.time.clock_source',
 		'embox.kernel.critical',
 		'embox.lib.LibC',
 		'embox.kernel.timer.sys_timer',
 		'embox.framework.LibFrameworkNet',
	],

) 
module(
	'udp',

   	sources = [
		'udp.c',
	],

 	depends = [
		'ipv4',
 		'skbuff',
 		'icmp',
 		'core',
 		'embox.lib.LibC',
 		'embox.framework.LibFrameworkNet',
	],

) 
module(
	'ntp',

   	sources = [
		'ntp.c',
	],

 	depends = [
		'udp',
 		'embox.kernel.time.timekeeper',
 		'embox.kernel.timer.sys_timer',
	],

) 
module(
	'bootp',

   	sources = [
		'bootp.c',
	],

 	depends = [
		'udp',
	],

) 
module(
	'snmp',

   	sources = [
		'snmp.c',
	],

 	depends = [
		'embox.net.mib.snmp_mib',
	],

) 