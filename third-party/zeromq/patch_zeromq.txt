diff -aur zeromq-3.2.2/configure zeromq/configure
--- zeromq-3.2.2/configure	2012-11-23 11:58:54.000000000 +0400
+++ zeromq/configure	2013-12-25 17:25:29.631638222 +0400
@@ -16387,6 +16387,7 @@
   return 0;
 }
 _ACEOF
+rm -rf conftest
 if ac_fn_c_try_link "$LINENO"; then :
   libzmq_cv_c_compiler_works="yes" ;
 else
@@ -16903,7 +16904,7 @@
 libzmq_pedantic="yes"
 
 # By default compiling with -Werror except OSX.
-libzmq_werror="yes"
+libzmq_werror="no"
 
 # By default use DSO visibility
 libzmq_dso_visibility="yes"
@@ -17664,6 +17665,8 @@
             as_fn_error $? "Building static libraries is not supported under Cygwin" "$LINENO" 5
         fi
         ;;
+    *none*)
+        ;;
     *)
         as_fn_error $? "unsupported system: ${host_os}." "$LINENO" 5
         ;;
diff -aur zeromq-3.2.2/Makefile.in zeromq/Makefile.in
--- zeromq-3.2.2/Makefile.in	2012-11-23 11:58:57.000000000 +0400
+++ zeromq/Makefile.in	2013-12-25 17:25:29.881638213 +0400
@@ -256,9 +256,9 @@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 ACLOCAL_AMFLAGS = -I config
-@BUILD_PGM_FALSE@SUBDIRS = src doc perf tests
-@BUILD_PGM_TRUE@SUBDIRS = foreign/openpgm src doc perf tests
-DIST_SUBDIRS = foreign/openpgm src doc perf tests builds/msvc
+@BUILD_PGM_FALSE@SUBDIRS = src doc perf
+@BUILD_PGM_TRUE@SUBDIRS = foreign/openpgm src doc perf
+DIST_SUBDIRS = foreign/openpgm src doc perf builds/msvc
 EXTRA_DIST = \
 	autogen.sh	\
 	version.sh	\
diff -aur zeromq-3.2.2/src/likely.hpp zeromq/src/likely.hpp
--- zeromq-3.2.2/src/likely.hpp	2012-10-25 12:30:40.000000000 +0400
+++ zeromq/src/likely.hpp	2013-12-25 18:18:03.388211933 +0400
@@ -22,8 +22,8 @@
 #define __ZMQ_LIKELY_HPP_INCLUDED__
 
 #if defined __GNUC__
-#define likely(x) __builtin_expect ((x), 1)
-#define unlikely(x) __builtin_expect ((x), 0)
+#define likely(x) __builtin_expect (!!(x), 1)
+#define unlikely(x) __builtin_expect (!!(x), 0)
 #else
 #define likely(x) (x)
 #define unlikely(x) (x)
Only in zeromq/src: likely.hpp~
diff -aur zeromq-3.2.2/src/signaler.cpp zeromq/src/signaler.cpp
--- zeromq-3.2.2/src/signaler.cpp	2012-10-25 12:30:40.000000000 +0400
+++ zeromq/src/signaler.cpp	2013-12-25 17:25:29.881638213 +0400
@@ -327,7 +327,7 @@
 
     return 0;
 
-#elif defined ZMQ_HAVE_OPENVMS
+#elif (defined ZMQ_HAVE_OPENVMS) || (defined __EMBOX__)
 
     //  Whilst OpenVMS supports socketpair - it maps to AF_INET only.  Further,
     //  it does not set the socket options TCP_NODELAY and TCP_NODELACK which
@@ -345,11 +345,11 @@
     errno_assert (listener != -1);
 
     int on = 1;
-    int rc = setsockopt (listener, IPPROTO_TCP, TCP_NODELAY, &on, sizeof (on));
-    errno_assert (rc != -1);
+    int rc;// = setsockopt (listener, IPPROTO_TCP, TCP_NODELAY, &on, sizeof (on));
+    //errno_assert (rc != -1);
 
-    rc = setsockopt (listener, IPPROTO_TCP, TCP_NODELACK, &on, sizeof (on));
-    errno_assert (rc != -1);
+    //rc = setsockopt (listener, IPPROTO_TCP, TCP_NODELACK, &on, sizeof (on));
+    //errno_assert (rc != -1);
 
     rc = bind(listener, (struct sockaddr*) &lcladdr, sizeof (lcladdr));
     errno_assert (rc != -1);
@@ -365,11 +365,11 @@
     *w_ = open_socket (AF_INET, SOCK_STREAM, 0);
     errno_assert (*w_ != -1);
 
-    rc = setsockopt (*w_, IPPROTO_TCP, TCP_NODELAY, &on, sizeof (on));
-    errno_assert (rc != -1);
+    //rc = setsockopt (*w_, IPPROTO_TCP, TCP_NODELAY, &on, sizeof (on));
+    //errno_assert (rc != -1);
 
-    rc = setsockopt (*w_, IPPROTO_TCP, TCP_NODELACK, &on, sizeof (on));
-    errno_assert (rc != -1);
+    //rc = setsockopt (*w_, IPPROTO_TCP, TCP_NODELACK, &on, sizeof (on));
+    //errno_assert (rc != -1);
 
     rc = connect (*w_, (struct sockaddr*) &lcladdr, sizeof (lcladdr));
     errno_assert (rc != -1);
diff -aur zeromq-3.2.2/src/tcp.cpp zeromq/src/tcp.cpp
--- zeromq-3.2.2/src/tcp.cpp	2012-10-25 12:30:40.000000000 +0400
+++ zeromq/src/tcp.cpp	2013-12-25 17:25:30.288304868 +0400
@@ -44,20 +44,20 @@
     //  so using Nagle wouldn't improve throughput in anyway, but it would
     //  hurt latency.
     int nodelay = 1;
-    int rc = setsockopt (s_, IPPROTO_TCP, TCP_NODELAY, (char*) &nodelay,
-        sizeof (int));
+//    int rc = setsockopt (s_, IPPROTO_TCP, TCP_NODELAY, (char*) &nodelay,
+//        sizeof (int));
 #ifdef ZMQ_HAVE_WINDOWS
     wsa_assert (rc != SOCKET_ERROR);
 #else
-    errno_assert (rc == 0);
+    //errno_assert (rc == 0);
 #endif
 
 #ifdef ZMQ_HAVE_OPENVMS
     //  Disable delayed acknowledgements as they hurt latency is serious manner.
     int nodelack = 1;
-    rc = setsockopt (s_, IPPROTO_TCP, TCP_NODELACK, (char*) &nodelack,
-        sizeof (int));
-    errno_assert (rc != SOCKET_ERROR);
+//    rc = setsockopt (s_, IPPROTO_TCP, TCP_NODELACK, (char*) &nodelack,
+//        sizeof (int));
+    //errno_assert (rc != SOCKET_ERROR);
 #endif
 }
 
