diff -aur orig/dropbear-2014.63/cli-kex.c dropbear-2014.63/cli-kex.c
--- orig/dropbear-2014.63/cli-kex.c	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/cli-kex.c	2014-09-01 14:15:00.934972049 +0400
@@ -92,7 +92,8 @@
 void recv_msg_kexdh_reply() {
 
 	sign_key *hostkey = NULL;
-	unsigned int type, keybloblen;
+	unsigned keybloblen;
+	enum signkey_type type;
 	unsigned char* keyblob = NULL;
 
 	TRACE(("enter recv_msg_kexdh_reply"))
diff -aur orig/dropbear-2014.63/common-session.c dropbear-2014.63/common-session.c
--- orig/dropbear-2014.63/common-session.c	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/common-session.c	2014-09-01 14:15:00.934972049 +0400
@@ -199,7 +199,7 @@
 					/* blocking read of the version string */
 					read_session_identification();
 				} else {
-					read_packet();
+					dropbear_read_packet();
 				}
 			}
 			
diff -aur orig/dropbear-2014.63/dbutil.c dropbear-2014.63/dbutil.c
--- orig/dropbear-2014.63/dbutil.c	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/dbutil.c	2014-09-01 14:35:40.564935512 +0400
@@ -319,7 +319,7 @@
 			continue;
 		}
 
-		if (listen(sock, 20) < 0) {
+		if (listen(sock, 4) < 0) {
 			err = errno;
 			close(sock);
 			TRACE(("listen() failed"))
diff -aur orig/dropbear-2014.63/debug.h dropbear-2014.63/debug.h
--- orig/dropbear-2014.63/debug.h	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/debug.h	2014-09-01 14:15:00.934972049 +0400
@@ -71,7 +71,7 @@
 
 /* To debug with GDB it is easier to run with no forking of child processes.
    You will need to pass "-F" as well. */
-/* #define DEBUG_NOFORK */
+#define DEBUG_NOFORK 
 
 
 /* For testing as non-root on shadowed systems, include the crypt of a password
diff -aur orig/dropbear-2014.63/includes.h dropbear-2014.63/includes.h
--- orig/dropbear-2014.63/includes.h	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/includes.h	2014-09-01 14:15:00.938305382 +0400
@@ -30,13 +30,16 @@
 #include "options.h"
 #include "debug.h"
 
+#include <sys/socket.h>
+#include "stubs.h"
+
 #include <sys/types.h>
 #include <sys/ioctl.h>
-#include <sys/param.h> /* required for BSD4_4 define */
+//#include <sys/param.h> [> required for BSD4_4 define <]
 #include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/time.h>
-#include <sys/un.h>
+//#include <sys/un.h>
 #include <sys/wait.h>
 #include <sys/resource.h>
 
@@ -51,13 +54,15 @@
 #include <string.h>
 #include <termios.h>
 #include <unistd.h>
-#include <syslog.h>
+//#include <syslog.h>
 #include <netdb.h>
 #include <ctype.h>
 #include <stdarg.h>
 #include <dirent.h>
 #include <time.h>
 
+#include <sys/select.h>
+
 #ifdef HAVE_UTMP_H
 #include <utmp.h>
 #endif
@@ -86,7 +91,7 @@
 #include <netinet/in_systm.h>
 #endif
 
-#include <netinet/ip.h>
+//#include <netinet/ip.h>
 
 #ifdef HAVE_NETINET_TCP_H
 #include <netinet/tcp.h>
diff -aur orig/dropbear-2014.63/options.h dropbear-2014.63/options.h
--- orig/dropbear-2014.63/options.h	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/options.h	2014-09-01 14:15:00.938305382 +0400
@@ -24,7 +24,7 @@
 #define DSS_PRIV_FILENAME "/etc/dropbear/dropbear_dss_host_key"
 #endif
 #ifndef RSA_PRIV_FILENAME
-#define RSA_PRIV_FILENAME "/etc/dropbear/dropbear_rsa_host_key"
+#define RSA_PRIV_FILENAME "/dropbear_rsa_host_key"
 #endif
 #ifndef ECDSA_PRIV_FILENAME
 #define ECDSA_PRIV_FILENAME "/etc/dropbear/dropbear_ecdsa_host_key"
@@ -231,7 +231,7 @@
 /* Source for randomness. This must be able to provide hundreds of bytes per SSH
  * connection without blocking. In addition /dev/random is used for seeding
  * rsa/dss key generation */
-#define DROPBEAR_URANDOM_DEV "/dev/urandom"
+#define DROPBEAR_URANDOM_DEV "/random"
 
 /* Set this to use PRNGD or EGD instead of /dev/urandom or /dev/random */
 /*#define DROPBEAR_PRNGD_SOCKET "/var/run/dropbear-rng"*/
diff -aur orig/dropbear-2014.63/packet.c dropbear-2014.63/packet.c
--- orig/dropbear-2014.63/packet.c	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/packet.c	2014-09-01 14:15:00.938305382 +0400
@@ -160,7 +160,7 @@
 /* Non-blocking function reading available portion of a packet into the
  * ses's buffer, decrypting the length if encrypted, decrypting the
  * full portion if possible */
-void read_packet() {
+void dropbear_read_packet() {
 
 	int len;
 	unsigned int maxlen;
diff -aur orig/dropbear-2014.63/packet.h dropbear-2014.63/packet.h
--- orig/dropbear-2014.63/packet.h	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/packet.h	2014-09-01 14:15:00.938305382 +0400
@@ -29,7 +29,7 @@
 #include "includes.h"
 
 void write_packet();
-void read_packet();
+void dropbear_read_packet();
 void decrypt_packet();
 void encrypt_packet();
 
diff -aur orig/dropbear-2014.63/termcodes.c dropbear-2014.63/termcodes.c
--- orig/dropbear-2014.63/termcodes.c	2014-02-19 18:05:24.000000000 +0400
+++ dropbear-2014.63/termcodes.c	2014-09-01 14:15:00.938305382 +0400
@@ -26,6 +26,7 @@
 #include "termcodes.h"
 
 const struct TermCode termcodes[MAX_TERMCODE+1] = {
+#if 0
 
 		{0, 0}, /* TTY_OP_END */
 		{VINTR, TERMCODE_CONTROLCHAR}, /* control character codes */
@@ -190,4 +191,5 @@
 		{PARENB, TERMCODE_CONTROL},
 		{PARODD, TERMCODE_CONTROL}
 		/* 94 */
+#endif
 };
