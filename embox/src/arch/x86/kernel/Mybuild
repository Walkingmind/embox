package embox.arch.x86.kernel

/* FIXME:
 * Unused files: multiboot.c
 */

module context extends embox.arch.context {
	source "context.c", "context_switch.S", "context.h"
}

/*FIXME mybuild may be split this to differernt modules */
module locore extends embox.arch.locore {
	/* FIXME:
	 * 1.it use multiboot.c (called from boot.S)
	 * 2.it depends from arch (called from exception_handler.c)
	 */
	@IncludePath("$(SRC_DIR)/compat/posix/include")
	source "boot.S", "idt.c", "exception_entry.S", "irq_handler.c"
	source "gdt.c", "gdt_flush.S"
	source "ipl.c", "exception_handler.c", "traps_core.c"

	depends embox.lib.LibC
	depends embox.kernel.critical
}

module interrupt extends embox.arch.interrupt {
	source "irq_entry.S", "ipl_impl.h"
	depends locore
}

module usermode extends embox.arch.usermode {
	source "usermode_entry.S"
} 

/*FIXME mybuild arch module what is it */
module arch {
	/* FIXME:
	 * 1.it not depends from embox.arch.x86.cpu
	 */
	source "arch.c"

	depends locore
	depends embox.arch.x86.cpu
}

module smp {
	source "smp.c"
	source "ap_trampoline.S"

	depends embox.driver.interrupt.lapic
}