package embox.net

module arp {
	source "arp.c"

	depends net_tx
	depends skbuff
	depends arp_queue
	depends route
	depends neighbour
	depends embox.lib.LibC
	depends embox.framework.LibFrameworkNet
}

module arp_queue {
	option number amount_package=20
	option number htable_width=3
	option number package_timeout=1000
	source "arp_queue.c"

	depends embox.util.hashtable
	depends net_tx
	depends skbuff
	depends route
	depends embox.kernel.time.kernel_time
	depends embox.kernel.timer.sys_timer
	depends embox.kernel.thread.sched
	depends embox.kernel.thread.event
	depends embox.mem.objalloc
}

module icmpv4 {
	source "icmpv4.c"

	depends eth
	depends raw_sock
	depends core /* for devinet.c */
	depends ipv4 /* for ip_output.c */
	depends skbuff
	depends embox.kernel.time.kernel_time
	depends embox.framework.LibFrameworkNet
}

module icmpv6 {
	source "icmpv6.c"
}

module ipv4 {
	/* FIXME:
	 * 1.it depends from icmp (called from ip_options.c, ip_output.c)
	 */
	source "ipv4_fragment.c"

	option number ip_fragmented_support = 0

	depends skbuff
	depends embox.mem.objalloc
	depends embox.kernel.timer.sys_timer
	depends embox.lib.LibC

	source "ipv4_input.c"
	depends skbuff
	depends raw_sock
	depends embox.lib.LibC
	/* depends from ip_fragment.c */
	depends netfilter

	source "ipv4_options.c"

	source "ipv4_output.c"
	depends net_tx
	depends skbuff
	depends route
	depends eth
}

module ipv6 {
	source "ipv6_input.c"
	depends skbuff
}

module rarp {
	source "rarp.c"

	depends net_tx
	depends skbuff
	depends neighbour
	depends embox.lib.LibC
	depends embox.framework.LibFrameworkNet
}

module route {
	source "route.c"
	option number route_table_size=8

	depends core /* for inetdev.c */ 
	depends embox.mem.pool
	depends embox.util.List
}
