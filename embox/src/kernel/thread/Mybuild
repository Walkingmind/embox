package embox.kernel.thread

@DefaultImpl(NoThreads)
abstract module thread_mode {
	
}

module NoThreads extends thread_mode {
	
}

module core extends thread_mode {
	option number thread_stack_size=8192
	option number thread_pool_size=16

	source "core.c"

	depends sched
	depends embox.kernel.thread.sched_policy.api
	depends embox.arch.context
	depends embox.kernel.task.kernel_task
	
	@NoRuntime depends embox.kernel.event_sched
}

module sched {
	source "sched.c"

	depends embox.kernel.timer.sys_timer /* for timeslices support */
	depends embox.arch.context /* context_switch */
	depends embox.kernel.thread.sched_policy.api
	
	@NoRuntime depends embox.kernel.task.std_signal
	@NoRuntime depends embox.kernel.thread.current.api
	@NoRuntime depends embox.compat.posix.util.time
	@NoRuntime depends embox.kernel.critical
	
	@NoRuntime depends embox.kernel.event_sched
}

module wait_queue {
	source "wait_queue.c"

	depends embox.util.DList

	@NoRuntime depends embox.kernel.thread.sched
	@NoRuntime depends embox.kernel.thread.core
}

/* FIXME: Deprecated */
module event {	
	depends embox.kernel.event_api	
}
