package embox.kernel.thread

@DefaultImpl(NoThreads)
abstract module thread_mode {
	
}

module NoThreads extends thread_mode {
	
}

module core extends thread_mode {
	option number thread_stack_size=8192
	option number thread_pool_size=16

	source "core.c"

	depends sched
	depends event
	depends embox.kernel.thread.sched_policy.api
	depends embox.arch.context
	depends embox.kernel.task.kernel_task
}

@DefaultImpl(sched_none)
abstract module sched_api {
}

module sched_none extends sched_api {
	source "sched_none.c"
	
}

module sched extends sched_api {
	source "sched.c", "startq.c"

	depends embox.kernel.timer.sys_timer /* for timeslices support */
	depends embox.arch.context /* context_switch */
	depends embox.kernel.thread.sched_policy.api
	
	@NoRuntime depends embox.kernel.thread.current.api
	@NoRuntime depends embox.compat.posix.util.time
	@NoRuntime depends embox.kernel.critical
}

module event {
	source "event.c"
	
	depends sched_api
	depends embox.kernel.thread.sched_policy.api
}
