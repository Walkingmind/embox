#!/usr/bin/runtest

# This test works in three steps:
# 1. Execute 'ntpdate <host_ip>' on Embox.
# 2. Get host's date in the format xxxx-xx-xx (e.g. 2014-01-05).
# 3. Execute 'date' on Embox and compare result (first 10 symbols of output)
#    with result of the item 2.


source [file join [file dirname [info script]] framework/test_core.exp]

namespace import autotest::*

set host_date ""

proc get_host_date {} {
	global host_date
	# Get current host's date in the format same as in Embox (e.g. 2014-01-05).
	spawn date -u --rfc-3339=date
	expect {
		# 10 is a length of date - e.g. 2014-01-05
		-regexp {.{10}}
	}
	set host_date $expect_out(0,string)
}

TEST_SETUP_HOST {get_host_date}

TEST_CASE {ntpdate test} {
	variable host_ip
	global host_date
	
	send "ntpdate $host_ip\r"
	expect "ntpdate"
	expect {
	        timeout  { puts "ntpdate.exp: timeout\n"; return -1 }
	        -regexp "ntpdate:.*" { puts "$expect_out(buffer)\n"; return -1 }
	        ":/#"
	}
	
	# And compare the host date with the Embox's one.
	# XXX: compare the both times too, not only dates
	send "date\r"
	expect "date"
	expect {
	        timeout  { puts "ntpdate.exp: date command timeout\n"; return -1 }
	        # Date 2014-01-05 is from class (2.*)
	        -regexp {2.*} {
	                         regexp {.{10}} $expect_out(0,string) embox_date
	                         if {$embox_date != $host_date} {
	                             return -1
	                         }
	                      }
	}

	return 0
}
