package third_party.boost

static module core {
	depends embox.lib.LibC
	depends embox.lib.cxx.libsupcxx
	depends embox.arch.x86.LibM // FIXME:
	depends third_party.STLport.core

	source "empty.c" // FIXME: workaround
	source "order.mk"

	@Rule(script="$(MAKE) -C $(THIRDPARTY_DIR)/boost MAKEFLAGS= EMBOX_ARCH='$(ARCH)' EMBOX_CROSS_COMPILE='$(CROSS_COMPILE)' EMBOX_MAKEFLAGS='$(MAKEFLAGS)' ROOT_DIR=$(abspath $(ROOT_DIR)) EMBOX_CFLAGS='$(CFLAGS)' EMBOX_CXXFLAGS='$(CXXFLAGS)' EMBOX_CPPFLAGS='$(EMBOX_EXPORT_CPPFLAGS)'")
	source
		"../../../../boost/lib/libboost_atomic.a",
		"../../../../boost/lib/libboost_chrono.a",
		"../../../../boost/lib/libboost_context.a",
		"../../../../boost/lib/libboost_date_time.a",
		"../../../../boost/lib/libboost_exception.a",
		"../../../../boost/lib/libboost_filesystem.a",
		"../../../../boost/lib/libboost_log.a",
		"../../../../boost/lib/libboost_log_setup.a",
		"../../../../boost/lib/libboost_program_options.a",
		"../../../../boost/lib/libboost_random.a",
		"../../../../boost/lib/libboost_signals.a",
		"../../../../boost/lib/libboost_system.a",
		"../../../../boost/lib/libboost_thread.a",
		"../../../../boost/lib/libboost_timer.a",
		"../../../../boost/lib/libboost_wave.a"
}