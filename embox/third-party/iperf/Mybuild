package third_party.iperf

static module libs {
	@IncludePath("$(SRC_DIR)/compat/posix/include")

	depends embox.lib.LibC
	depends embox.compat.posix.util.Time
	depends embox.compat.posix.proc.uid

	source "empty.c" // FIXME: workaround
	source "order.mk"

	@Rule(script="$(MAKE_IPERF)")
	source "../../../../iperf/src/iperf-build/compat/libcompat.a"
}

@Cmd(name = "iperf",
	help = "iperf is a tool for measuring maximum TCP and UDP bandwidth performance",
	man = '''
		NAME
			iperf is a tool for measuring maximum TCP and UDP bandwidth performance.
		SYNOPSIS
			iperf [-s|-c host] [options]
       		iperf [-h|--help] [-v|--version]

		AUTHORS
			Andrey Gazukin
	''')
module iperf {
	@IncludePath("$(SRC_DIR)/compat/posix/include")

	depends libs

	@Rule(script="true")
	source  "../../../../iperf/src/iperf-build/src/main.o",
			"../../../../iperf/src/iperf-build/src/Client.o",
			"../../../../iperf/src/iperf-build/src/Extractor.o",
			"../../../../iperf/src/iperf-build/src/gnu_getopt_long.o",
			"../../../../iperf/src/iperf-build/src/gnu_getopt.o",
			"../../../../iperf/src/iperf-build/src/Launch.o",
			"../../../../iperf/src/iperf-build/src/List.o",
			"../../../../iperf/src/iperf-build/src/Locale.o",
			"../../../../iperf/src/iperf-build/src/PerfSocket.o",
			"../../../../iperf/src/iperf-build/src/ReportCSV.o",
			"../../../../iperf/src/iperf-build/src/ReportDefault.o",
			"../../../../iperf/src/iperf-build/src/Reporter.o",
			"../../../../iperf/src/iperf-build/src/Server.o",
			"../../../../iperf/src/iperf-build/src/service.o",
			"../../../../iperf/src/iperf-build/src/Settings.o",
			"../../../../iperf/src/iperf-build/src/SocketAddr.o",
			"../../../../iperf/src/iperf-build/src/sockets.o",
			"../../../../iperf/src/iperf-build/src/stdio.o",
			"../../../../iperf/src/iperf-build/src/tcp_window_size.o"
	source "iperf_cmd.c"
	source "order.mk"
}