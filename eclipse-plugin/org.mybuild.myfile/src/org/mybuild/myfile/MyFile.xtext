/**
 * MyBuild file grammar.
 * Version: 0.2
 * 
 * Author: Eldar Abusalimov
 */
grammar org.mybuild.myfile.MyFile with org.eclipse.xtext.common.Terminals

generate myFile "http://www.mybuild.org/myfile/MyFile"

Model:
	package=Package? imports+=Import* entities+=Entity*;

Package:
	'package' name=QualifiedName;

Import:
	'import' importedNamespace=QualifiedNameWithWildcard;

Entity:
	Module | Interface;

Interface:
	'interface' name=ID ('extends' superType=[Interface|QualifiedName])?
	'{' attributes+=InterfaceAttribute* '}';

InterfaceAttribute:
	Feature;

Feature:
	'feature' name=ID ('extends' superType=[Feature|QualifiedNameWithWildcard])?;

Module:
	(static?='static'? & abstract?='abstract'?)
	'module' name=ID ('extends' superType=[Module|QualifiedName])?
	'{' attributes+=ModuleAttribute* '}';

ModuleAttribute:
	Sources | Objects | Depends | Provides | Requires | Make | Option;

Depends:
	'depends' modules+=[Module|QualifiedName] (',' modules+=[Module|QualifiedName])*;

Provides:
	'provides' FeatureList;

Requires:
	'requires' FeatureList;

FeatureList:
	features+=[Feature|QualifiedNameWithWildcard] (','
	features+=[Feature|QualifiedNameWithWildcard])*;

Sources:
	'source' FilenameList;

Objects:
	'object' FilenameList;

FilenameList:
	files+=Filename (','
	files+=Filename)*;

Filename:
	name=STRING;

Option:
	'option' name=ID ':'
	(string?=StringOption
	| number?=NumberOption
	| boolean?=BooleanOption);

StringOption:
	{Option} 'string' ('=' stringValue=STRING)?;

NumberOption:
	{Option} 'number' ('=' numberValue=INT)?;

BooleanOption:
	{Option} 'boolean' ('=' booleanValue=BooleanLiteral)?;

Make:
	'make' (MakeRule | MakeFlags);

MakeFlags:
	'flags' flags=StringList;

MakeRule:
	target=Filename (':' prerequisites=FilenameList)? ('{' recipes=StringList '}')?;

StringList:
	STRING (','
	STRING)*;

BooleanLiteral:
	{BooleanLiteral} ('false' | isTrue?='true');

QualifiedName:
	ID ('.' ID)*;

QualifiedNameWithWildcard:
	QualifiedName '.*'?;

